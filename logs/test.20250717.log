INFO - 2025-07-17 10:41:03,191 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-07-17 10:41:03,192 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/login
INFO - 2025-07-17 10:41:03,192 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 10:41:03,192 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：用户名和密码正确登录验证
INFO - 2025-07-17 10:41:03,192 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,192 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,192 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_name': 'test01', 'passwd': 'admin123'}}
INFO - 2025-07-17 10:41:03,226 - sendrequest.py:108 -[sendrequest:send_request] - cookie：{'Cookie': {'access_token_cookie': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MjcyMDA2MywianRpIjoiZWRjMDExOTYtN2VkMC00MzM5LTg2MGQtYmExNTNjNDE4Yjc1IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImV4YW1wbGVfdXNlciIsIm5iZiI6MTc1MjcyMDA2MywiY3NyZiI6Ijk5ZTUzMmJkLTZkMzktNDVkMS04YWE0LTk1MTJiYjIzM2FmMiIsImV4cCI6MTc1MjcyMDk2M30.rLUrpTYANI_aFklJYIJlmixVnTm4kCDWQdoP5HmKHBE', 'csrf_access_token': '99e532bd-6d39-45d1-8aa4-9512bb233af2'}}
INFO - 2025-07-17 10:41:03,226 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u767b\u5f55\u6210\u529f",
  "msg_code": 200,
  "orgId": "6140913758128971280",
  "token": "2b5fdCA9cf234A05739dAbD474FE9",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 10:41:03,226 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 10:41:03,226 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': 'none'}}, {'eq': {'msg': '登录成功'}}]
INFO - 2025-07-17 10:41:03,227 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【None】,实际结果【[None]】
INFO - 2025-07-17 10:41:03,227 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg': '登录成功'}，等于预期结果：{'msg': '登录成功'}
INFO - 2025-07-17 10:41:03,227 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,227 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,231 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 10:41:03,231 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 10:41:03,231 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 10:41:03,231 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 10:41:03,231 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': '2b5fdCA9cf234A05739dAbD474FE9'}
INFO - 2025-07-17 10:41:03,231 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,231 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 10:41:03,233 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 10:41:03,233 - apiutil_business.py:205 -[apiutil_business:extract_data_list] - json提取到参数：{'goodsIds': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 10:41:03,234 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 10:41:03,234 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 10:41:03,234 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,238 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,240 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,243 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 10:41:03,243 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 10:41:03,243 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 10:41:03,243 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 10:41:03,243 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,243 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,243 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819', 'page': 1, 'size': 20}}
INFO - 2025-07-17 10:41:03,247 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "api_type": "pinduoduo",
  "cache": 0,
  "call_args": {
    "num_iid": "1620002566"
  },
  "client_ip": "106.6.39.223",
  "error": "",
  "error_code": "0000",
  "execution_time": "0.437",
  "goodsId": "82193785267",
  "item": {
    "AmountOnSale": 3188,
    "CategoryId": 8484,
    "Coupon": null,
    "Delivery": {
      "From": null,
      "Info": null,
      "MarkInfo": null,
      "Postage": "\u5feb\u9012 \u514d\u8fd0\u8d39",
      "To": null,
      "extras": null
    },
    "DescUrl": null,
    "Detail": "<img src=\"https://img.pddpic.com/mms-material-img/2022-09-18/3f89d470-1af8-4dee-b529-6d62aa2ea3b7.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-02-15/ddf6fe7b-b536-4183-932d-69a1189a3f59.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/20f659b04d3e7e5851c27ff9931c96fc.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-11-14/4420a8c3-49ed-46d8-ab55-15e7a638ca31.jpg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/26c3e9d5cfbaf4e8f13b2bdd38f48d71.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/0aa872fa74599dad7b6aefe6b6c035c0.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6bc959e32a30424c7a5284a37676999c.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/1fa9861a8c99c5e9e8119fd2239fef5a.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/b62cabf1d2320c5761e3f4c15203fb20.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6f6e54376a66cbc78e16700d4c424fe1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/2f60753dfc875a6876adc35833a69d31.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/ae0116e589d8de712f8dafd0c356cefe.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/da910c98fcc8de1b4d2d1498cd7899fd.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/140349649d8b7d08c8e88bfbbaa2f900.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/a953bae2eeb7364ef3ef2976a97d07eb.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4da59828136c3b1308aad0aa990778a7.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4a365b61a80e47288c8609ccd5982396.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/cd0a8a96b783a51236812ce24c59a329.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/16008ac19768d05e7dee16406ff958a1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/ef1d17b69ebf9449a8bb52459b168c26.jpeg\" style=\"width:100%;\"/>",
    "FansCount": null,
    "ImageUrls": [
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/d209ef7bcc9183c3bb8ca1dfdb108d49.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/74257ab65f3f00da7a90fde9042fe640.jpeg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/e8fbd9cb-cc74-4caa-9380-84c46d27b008.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/d76f515b-e375-4060-b94e-cf64f6b0964e.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/f2f279b5-6000-4fbe-b99b-7c1cbd7884ea.jpg"
    ],
    "MainImageVideo": null,
    "OfferId": 1620002566,
    "OriginalPriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 115,
        "Range": "3"
      }
    ],
    "PriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 95.4,
        "Range": "3"
      }
    ],
    "ProductFeatureTuples": [
      {
        "Item1": "\u9762\u6599\u6750\u8d28",
        "Item2": "\u4eff\u76ae\u8349"
      },
      {
        "Item1": "\u6210\u5206\u542b\u91cf",
        "Item2": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09"
      },
      {
        "Item1": "\u7248\u578b",
        "Item2": "\u4fee\u8eab"
      },
      {
        "Item1": "\u9886\u578b",
        "Item2": "\u5706\u9886"
      },
      {
        "Item1": "\u8863\u957f",
        "Item2": "\u77ed\u6b3e"
      },
      {
        "Item1": "\u662f\u5426\u5e26\u6bdb\u9886",
        "Item2": "\u4e0d\u5e26\u6bdb\u9886"
      },
      {
        "Item1": "\u4e3b\u98ce\u683c",
        "Item2": "\u6c14\u8d28\u540d\u5a9b"
      }
    ],
    "ProductFeatures": {
      "\u4e3b\u98ce\u683c": "\u6c14\u8d28\u540d\u5a9b",
      "\u6210\u5206\u542b\u91cf": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09",
      "\u662f\u5426\u5e26\u6bdb\u9886": "\u4e0d\u5e26\u6bdb\u9886",
      "\u7248\u578b": "\u4fee\u8eab",
      "\u8863\u957f": "\u77ed\u6b3e",
      "\u9762\u6599\u6750\u8d28": "\u4eff\u76ae\u8349",
      "\u9886\u578b": "\u5706\u9886"
    },
    "RateCount": null,
    "RetryCount": 0,
    "SellCount": "\u5df2\u62fc4.2\u4e07\u4ef6",
    "SellerId": null,
    "SellerNick": null,
    "ShopId": "461742",
    "ShopInfo": null,
    "ShopName": "\u679c\u679c\u5bb6\u6c14\u8d28\u5973\u88c5",
    "ShopUrl": "http://yangkeduo.com/mall_page.html?mall_id=461742",
    "SkuMaps": [
      {
        "AmountOnSale": 73,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357891",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 65,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357892",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 82,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357893",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357894",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 94,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357895",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 105,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357896",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 1051,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357897",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 88,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357898",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 80,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357899",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 660,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357900",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 126,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357901",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357902",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 98,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
        "Key": "1215:105309781;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107855",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 95,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/3660b7893ca5cda1ffcea745d10b2506.jpeg",
        "Key": "1215:105309781;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107856",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/a4a5a671afbb2d8e1f4c21c0ced3bea8.jpeg",
        "Key": "1215:105309781;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107857",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/f0551176629bf81f25757c160198dba1.jpeg",
        "Key": "1215:105309781;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107858",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 99,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/801a2e23140bfe76229f02aab0a8a5fe.jpeg",
        "Key": "1215:105309781;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107853",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 100,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/2f202934f16f0eee41257b77bf489262.jpeg",
        "Key": "1215:105309781;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107854",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      }
    ],
    "SkuProps": [
      {
        "IsImg": true,
        "Prop": "\u989c\u8272",
        "Value": [
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
            "name": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)",
            "value": "1215:1115500378"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
            "name": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:1115501666"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
            "name": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:105309781"
          }
        ]
      },
      {
        "IsImg": false,
        "Prop": "\u5c3a\u7801",
        "Value": [
          {
            "name": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
            "value": "1226:119128"
          },
          {
            "name": "M\uff0890-100\u65a4\uff09",
            "value": "1226:96784"
          },
          {
            "name": "L\uff08100-110\u65a4\uff09",
            "value": "1226:33651"
          },
          {
            "name": "XL\uff08110-120\u65a4\uff09",
            "value": "1226:33652"
          },
          {
            "name": "2XL\uff08120-130\u65a4\uff09",
            "value": "1226:33653"
          },
          {
            "name": "3XL\uff08130-140\u65a4\uff09",
            "value": "1226:33656"
          }
        ]
      }
    ],
    "SourceType": 6,
    "Subject": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
    "Tag": null,
    "Unit": null,
    "UserId": "461742",
    "_ddf": "app",
    "format_check": "ok"
  },
  "reason": "",
  "request_id": "gw-4.63510267214bd",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-17 10:41:03",
  "secache_time": 1666253415,
  "server_memory": "0.84MB",
  "server_time": "Beijing/2023-10-20 16:10:15",
  "translate_engine": "baidu",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 10:41:03,248 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 10:41:03,248 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 10:41:03,248 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,249 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,250 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,253 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 10:41:03,253 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 10:41:03,253 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 10:41:03,253 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：详情页面选择规格，提交订单
INFO - 2025-07-17 10:41:03,253 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,253 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,253 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': 127839112, 'price': '128', 'freight_insurance': '0.00', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 10:41:03,256 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 10:41:03",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "381307486747484873727",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 10:41:03,256 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'orderNumber': '381307486747484873727'}
INFO - 2025-07-17 10:41:03,256 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'userId': '1262204802105607729'}
INFO - 2025-07-17 10:41:03,257 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}]
INFO - 2025-07-17 10:41:03,257 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 10:41:03,257 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,257 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,259 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,265 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 10:41:03,265 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 10:41:03,265 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 10:41:03,265 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 10:41:03,265 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,265 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,265 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '381307486747484873727', 'userId': '1262204802105607729', 'timeStamp': '1752720063'}}
INFO - 2025-07-17 10:41:03,267 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 10:41:03",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 10:41:03,268 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '订单支付成功'}}]
INFO - 2025-07-17 10:41:03,268 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '订单支付成功'}，等于预期结果：{'message': '订单支付成功'}
INFO - 2025-07-17 10:41:03,268 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,269 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,270 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,274 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：校验订单状态
INFO - 2025-07-17 10:41:03,274 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/checkOrderStatus
INFO - 2025-07-17 10:41:03,274 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 10:41:03,274 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：校验商品订单状态
INFO - 2025-07-17 10:41:03,274 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,274 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,274 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '381307486747484873727', 'timeStamp': '1752720063'}}
INFO - 2025-07-17 10:41:03,278 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "",
  "error_code": "",
  "queryTime": "2025-07-17 10:41:03",
  "status": "0",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 10:41:03,278 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'status': '0'}}]
INFO - 2025-07-17 10:41:03,278 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'status': '0'}，等于预期结果：{'status': '0'}
INFO - 2025-07-17 10:41:03,278 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,279 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,280 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
ERROR - 2025-07-17 10:41:03,282 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
ERROR - 2025-07-17 10:41:03,283 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
INFO - 2025-07-17 10:41:03,284 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 10:41:03,284 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 10:41:03,284 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 10:41:03,284 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 10:41:03,284 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'None'}
INFO - 2025-07-17 10:41:03,284 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,284 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 10:41:03,286 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 10:41:03,286 - apiutil.py:183 -[apiutil:extract_data_list] - json提取到参数：{'goodsId': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 10:41:03,287 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 10:41:03,287 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 10:41:03,287 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,287 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,288 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,293 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 10:41:03,293 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 10:41:03,293 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 10:41:03,293 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 10:41:03,293 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,293 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,294 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819,33809635011,56996760797,82193785267,74190550836', 'page': 1, 'size': 20}}
INFO - 2025-07-17 10:41:03,296 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "\u4e0d\u5b58\u5728\u8be5\u5546\u54c1",
  "error_code": "4000",
  "goodsId": "",
  "item": {},
  "secache_date": "2025-07-17 10:41:03",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 10:41:03,296 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '4000'}}]
INFO - 2025-07-17 10:41:03,296 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【4000】,实际结果【4000】
INFO - 2025-07-17 10:41:03,296 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,297 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,298 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,325 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 10:41:03,325 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 10:41:03,325 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 10:41:03,325 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：提交订单
INFO - 2025-07-17 10:41:03,325 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,325 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,326 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '82193785267', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': '127839112', 'price': '128', 'freight_insurance': '0.0', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 10:41:03,328 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 10:41:03",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "976353325096378085623",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 10:41:03,328 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 10:41:03,329 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 10:41:03,329 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}, {'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 10:41:03,329 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 10:41:03,329 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 10:41:03,329 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,330 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,331 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,339 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 10:41:03,340 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 10:41:03,340 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 10:41:03,340 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 10:41:03,340 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,340 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,340 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '976353325096378085623', 'userId': '1262204802105607729', 'timeStamp': '1752720063'}}
INFO - 2025-07-17 10:41:03,343 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 10:41:03",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 10:41:03,343 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '订单支付成功'}}, {'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 10:41:03,343 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【订单支付成功】,实际结果【订单支付成功】
INFO - 2025-07-17 10:41:03,343 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 10:41:03,343 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,344 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,346 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,350 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 10:41:03,351 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 10:41:03,351 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,351 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常新增用户
INFO - 2025-07-17 10:41:03,351 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,351 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,351 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': '2b5fdCA9cf234A05739dAbD474FE9'}}
INFO - 2025-07-17 10:41:03,353 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u65b0\u589e\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 10:41:03,354 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增成功'}}]
INFO - 2025-07-17 10:41:03,354 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增成功】,实际结果【新增成功】
INFO - 2025-07-17 10:41:03,354 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,355 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,356 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,358 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 10:41:03,358 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 10:41:03,358 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,358 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少token
INFO - 2025-07-17 10:41:03,358 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,358 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,358 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 10:41:03,360 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 10:41:03,361 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 10:41:03,361 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 10:41:03,361 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,362 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,363 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,365 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 10:41:03,365 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 10:41:03,365 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,365 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数username
INFO - 2025-07-17 10:41:03,365 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,365 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,365 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 10:41:03,368 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 10:41:03,368 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 10:41:03,368 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 10:41:03,368 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,369 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,370 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,372 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 10:41:03,372 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 10:41:03,373 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,373 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数role_id
INFO - 2025-07-17 10:41:03,373 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,373 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,373 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 10:41:03,376 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 10:41:03,377 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 10:41:03,377 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 10:41:03,377 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,378 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,379 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,381 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：修改用户
INFO - 2025-07-17 10:41:03,381 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/updateUser
INFO - 2025-07-17 10:41:03,382 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,382 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常修改用户信息
INFO - 2025-07-17 10:41:03,382 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,382 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,382 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789#$123', 'role_id': 89588181111112343, 'dates': '2023-12-31', 'phone': 13800000000}}
INFO - 2025-07-17 10:41:03,385 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u66f4\u65b0\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 10:41:03,385 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '更新成功'}}]
INFO - 2025-07-17 10:41:03,385 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【更新成功】,实际结果【更新成功】
INFO - 2025-07-17 10:41:03,386 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,386 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,388 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,390 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 10:41:03,390 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 10:41:03,390 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,390 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效删除用户
INFO - 2025-07-17 10:41:03,390 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,390 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,390 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 10:41:03,392 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u5220\u9664\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 10:41:03,393 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除成功'}}]
INFO - 2025-07-17 10:41:03,393 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除成功】,实际结果【删除成功!】
INFO - 2025-07-17 10:41:03,393 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,393 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,394 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,396 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 10:41:03,397 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 10:41:03,397 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,397 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid不存在
INFO - 2025-07-17 10:41:03,397 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,397 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,397 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 10:41:03,400 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 10:41:03,400 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 10:41:03,400 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 10:41:03,400 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,401 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,402 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,403 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 10:41:03,403 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 10:41:03,403 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,403 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid为空
INFO - 2025-07-17 10:41:03,404 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,404 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,404 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 10:41:03,407 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 10:41:03,407 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 10:41:03,407 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 10:41:03,407 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,408 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,410 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,411 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 10:41:03,411 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 10:41:03,411 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,411 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·缺少必填参数
INFO - 2025-07-17 10:41:03,411 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,412 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,414 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 10:41:03,414 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 10:41:03,414 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 10:41:03,414 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,415 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 10:41:03,416 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 10:41:03,418 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户查询
INFO - 2025-07-17 10:41:03,419 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/queryUser
INFO - 2025-07-17 10:41:03,419 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 10:41:03,419 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效查询用户
INFO - 2025-07-17 10:41:03,419 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 10:41:03,419 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 10:41:03,419 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 10:41:03,422 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u67e5\u8be2\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 10:41:03,423 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '查询成功'}}, {'eq': {'msg_code': 200}}]
INFO - 2025-07-17 10:41:03,423 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【查询成功】,实际结果【查询成功!】
INFO - 2025-07-17 10:41:03,423 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg_code': 200}，等于预期结果：{'msg_code': 200}
INFO - 2025-07-17 10:41:03,423 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 10:41:03,424 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
ERROR - 2025-07-17 11:27:39,745 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/getProductList.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:27:39,745 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/productDetail.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:27:39,745 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/shoppingJoinCart.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:27:39,745 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/commitOrder.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:27:39,745 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/orderPay.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:28:16,354 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/getProductList.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:28:16,355 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/productDetail.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:28:16,355 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/shoppingJoinCart.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:28:16,355 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/commitOrder.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:28:16,355 - readyaml.py:28 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/orderPay.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-07-17 11:28:29,606 - readyaml.py:26 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/shoppingJoinCart.yaml]文件编码格式错误，--尝试使用utf-8编码解码YAML文件时发生了错误，请确保你的yaml文件是UTF-8格式！
INFO - 2025-07-17 11:28:29,658 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-07-17 11:28:29,658 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/login
INFO - 2025-07-17 11:28:29,658 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:28:29,658 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：用户名和密码正确登录验证
INFO - 2025-07-17 11:28:29,658 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,658 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,658 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_name': 'test01', 'passwd': 'admin123'}}
INFO - 2025-07-17 11:28:29,667 - sendrequest.py:108 -[sendrequest:send_request] - cookie：{'Cookie': {'access_token_cookie': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MjcyMjkwOSwianRpIjoiOTk4NzYwM2QtYjU4YS00YzE5LTg0NDUtMzhhM2U0MTkxYTRjIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImV4YW1wbGVfdXNlciIsIm5iZiI6MTc1MjcyMjkwOSwiY3NyZiI6ImQ5ZWI1ZjM1LTk2NzYtNGI3Yi05YzE1LTY4ZjIyNzI5NjI3YiIsImV4cCI6MTc1MjcyMzgwOX0.iOpVfAgH2cMkFHF291t_Nz_m8rYSZByVuFhwmJLJXDs', 'csrf_access_token': 'd9eb5f35-9676-4b7b-9c15-68f22729627b'}}
INFO - 2025-07-17 11:28:29,667 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u767b\u5f55\u6210\u529f",
  "msg_code": 200,
  "orgId": "6140913758128971280",
  "token": "563C38CeCB1Af2308b2aDBf6B6A05",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:28:29,668 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:28:29,668 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': 'none'}}, {'eq': {'msg': '登录成功'}}]
INFO - 2025-07-17 11:28:29,668 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【None】,实际结果【[None]】
INFO - 2025-07-17 11:28:29,668 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg': '登录成功'}，等于预期结果：{'msg': '登录成功'}
INFO - 2025-07-17 11:28:29,668 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,669 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,673 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:28:29,673 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:28:29,673 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:28:29,673 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:28:29,673 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': '563C38CeCB1Af2308b2aDBf6B6A05'}
INFO - 2025-07-17 11:28:29,673 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,673 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:28:29,675 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:28:29,675 - apiutil_business.py:205 -[apiutil_business:extract_data_list] - json提取到参数：{'goodsIds': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:28:29,676 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:28:29,676 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:28:29,676 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,680 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,682 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,685 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:28:29,685 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:28:29,685 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:28:29,685 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:28:29,685 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,685 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,685 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:28:29,689 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "api_type": "pinduoduo",
  "cache": 0,
  "call_args": {
    "num_iid": "1620002566"
  },
  "client_ip": "106.6.39.223",
  "error": "",
  "error_code": "0000",
  "execution_time": "0.437",
  "goodsId": "82193785267",
  "item": {
    "AmountOnSale": 3188,
    "CategoryId": 8484,
    "Coupon": null,
    "Delivery": {
      "From": null,
      "Info": null,
      "MarkInfo": null,
      "Postage": "\u5feb\u9012 \u514d\u8fd0\u8d39",
      "To": null,
      "extras": null
    },
    "DescUrl": null,
    "Detail": "<img src=\"https://img.pddpic.com/mms-material-img/2022-09-18/3f89d470-1af8-4dee-b529-6d62aa2ea3b7.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-02-15/ddf6fe7b-b536-4183-932d-69a1189a3f59.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/20f659b04d3e7e5851c27ff9931c96fc.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-11-14/4420a8c3-49ed-46d8-ab55-15e7a638ca31.jpg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/26c3e9d5cfbaf4e8f13b2bdd38f48d71.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/0aa872fa74599dad7b6aefe6b6c035c0.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6bc959e32a30424c7a5284a37676999c.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/1fa9861a8c99c5e9e8119fd2239fef5a.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/b62cabf1d2320c5761e3f4c15203fb20.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6f6e54376a66cbc78e16700d4c424fe1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/2f60753dfc875a6876adc35833a69d31.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/ae0116e589d8de712f8dafd0c356cefe.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/da910c98fcc8de1b4d2d1498cd7899fd.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/140349649d8b7d08c8e88bfbbaa2f900.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/a953bae2eeb7364ef3ef2976a97d07eb.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4da59828136c3b1308aad0aa990778a7.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4a365b61a80e47288c8609ccd5982396.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/cd0a8a96b783a51236812ce24c59a329.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/16008ac19768d05e7dee16406ff958a1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/ef1d17b69ebf9449a8bb52459b168c26.jpeg\" style=\"width:100%;\"/>",
    "FansCount": null,
    "ImageUrls": [
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/d209ef7bcc9183c3bb8ca1dfdb108d49.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/74257ab65f3f00da7a90fde9042fe640.jpeg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/e8fbd9cb-cc74-4caa-9380-84c46d27b008.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/d76f515b-e375-4060-b94e-cf64f6b0964e.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/f2f279b5-6000-4fbe-b99b-7c1cbd7884ea.jpg"
    ],
    "MainImageVideo": null,
    "OfferId": 1620002566,
    "OriginalPriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 115,
        "Range": "3"
      }
    ],
    "PriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 95.4,
        "Range": "3"
      }
    ],
    "ProductFeatureTuples": [
      {
        "Item1": "\u9762\u6599\u6750\u8d28",
        "Item2": "\u4eff\u76ae\u8349"
      },
      {
        "Item1": "\u6210\u5206\u542b\u91cf",
        "Item2": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09"
      },
      {
        "Item1": "\u7248\u578b",
        "Item2": "\u4fee\u8eab"
      },
      {
        "Item1": "\u9886\u578b",
        "Item2": "\u5706\u9886"
      },
      {
        "Item1": "\u8863\u957f",
        "Item2": "\u77ed\u6b3e"
      },
      {
        "Item1": "\u662f\u5426\u5e26\u6bdb\u9886",
        "Item2": "\u4e0d\u5e26\u6bdb\u9886"
      },
      {
        "Item1": "\u4e3b\u98ce\u683c",
        "Item2": "\u6c14\u8d28\u540d\u5a9b"
      }
    ],
    "ProductFeatures": {
      "\u4e3b\u98ce\u683c": "\u6c14\u8d28\u540d\u5a9b",
      "\u6210\u5206\u542b\u91cf": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09",
      "\u662f\u5426\u5e26\u6bdb\u9886": "\u4e0d\u5e26\u6bdb\u9886",
      "\u7248\u578b": "\u4fee\u8eab",
      "\u8863\u957f": "\u77ed\u6b3e",
      "\u9762\u6599\u6750\u8d28": "\u4eff\u76ae\u8349",
      "\u9886\u578b": "\u5706\u9886"
    },
    "RateCount": null,
    "RetryCount": 0,
    "SellCount": "\u5df2\u62fc4.2\u4e07\u4ef6",
    "SellerId": null,
    "SellerNick": null,
    "ShopId": "461742",
    "ShopInfo": null,
    "ShopName": "\u679c\u679c\u5bb6\u6c14\u8d28\u5973\u88c5",
    "ShopUrl": "http://yangkeduo.com/mall_page.html?mall_id=461742",
    "SkuMaps": [
      {
        "AmountOnSale": 73,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357891",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 65,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357892",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 82,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357893",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357894",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 94,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357895",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 105,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357896",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 1051,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357897",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 88,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357898",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 80,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357899",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 660,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357900",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 126,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357901",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357902",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 98,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
        "Key": "1215:105309781;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107855",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 95,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/3660b7893ca5cda1ffcea745d10b2506.jpeg",
        "Key": "1215:105309781;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107856",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/a4a5a671afbb2d8e1f4c21c0ced3bea8.jpeg",
        "Key": "1215:105309781;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107857",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/f0551176629bf81f25757c160198dba1.jpeg",
        "Key": "1215:105309781;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107858",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 99,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/801a2e23140bfe76229f02aab0a8a5fe.jpeg",
        "Key": "1215:105309781;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107853",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 100,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/2f202934f16f0eee41257b77bf489262.jpeg",
        "Key": "1215:105309781;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107854",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      }
    ],
    "SkuProps": [
      {
        "IsImg": true,
        "Prop": "\u989c\u8272",
        "Value": [
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
            "name": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)",
            "value": "1215:1115500378"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
            "name": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:1115501666"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
            "name": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:105309781"
          }
        ]
      },
      {
        "IsImg": false,
        "Prop": "\u5c3a\u7801",
        "Value": [
          {
            "name": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
            "value": "1226:119128"
          },
          {
            "name": "M\uff0890-100\u65a4\uff09",
            "value": "1226:96784"
          },
          {
            "name": "L\uff08100-110\u65a4\uff09",
            "value": "1226:33651"
          },
          {
            "name": "XL\uff08110-120\u65a4\uff09",
            "value": "1226:33652"
          },
          {
            "name": "2XL\uff08120-130\u65a4\uff09",
            "value": "1226:33653"
          },
          {
            "name": "3XL\uff08130-140\u65a4\uff09",
            "value": "1226:33656"
          }
        ]
      }
    ],
    "SourceType": 6,
    "Subject": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
    "Tag": null,
    "Unit": null,
    "UserId": "461742",
    "_ddf": "app",
    "format_check": "ok"
  },
  "reason": "",
  "request_id": "gw-4.63510267214bd",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-17 11:28:29",
  "secache_time": 1666253415,
  "server_memory": "0.84MB",
  "server_time": "Beijing/2023-10-20 16:10:15",
  "translate_engine": "baidu",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:28:29,690 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:28:29,690 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:28:29,690 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,691 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,692 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,695 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:28:29,695 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:28:29,695 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:28:29,695 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：详情页面选择规格，提交订单
INFO - 2025-07-17 11:28:29,695 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,695 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,695 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': 127839112, 'price': '128', 'freight_insurance': '0.00', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:28:29,697 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:28:29",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "909873648361440936996",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:28:29,698 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'orderNumber': '909873648361440936996'}
INFO - 2025-07-17 11:28:29,698 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'userId': '1262204802105607729'}
INFO - 2025-07-17 11:28:29,698 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}]
INFO - 2025-07-17 11:28:29,698 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:28:29,699 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,699 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,701 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,707 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:28:29,707 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:28:29,707 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:28:29,707 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:28:29,707 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,707 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,707 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '909873648361440936996', 'userId': '1262204802105607729', 'timeStamp': '1752722909'}}
INFO - 2025-07-17 11:28:29,709 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:28:29",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:28:29,710 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '订单支付成功'}}]
INFO - 2025-07-17 11:28:29,710 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '订单支付成功'}，等于预期结果：{'message': '订单支付成功'}
INFO - 2025-07-17 11:28:29,710 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,711 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,712 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,716 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：校验订单状态
INFO - 2025-07-17 11:28:29,716 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/checkOrderStatus
INFO - 2025-07-17 11:28:29,717 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:28:29,717 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：校验商品订单状态
INFO - 2025-07-17 11:28:29,717 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,717 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,717 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '909873648361440936996', 'timeStamp': '1752722909'}}
INFO - 2025-07-17 11:28:29,719 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "",
  "error_code": "",
  "queryTime": "2025-07-17 11:28:29",
  "status": "0",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:28:29,719 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'status': '0'}}]
INFO - 2025-07-17 11:28:29,719 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'status': '0'}，等于预期结果：{'status': '0'}
INFO - 2025-07-17 11:28:29,719 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,720 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,721 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
ERROR - 2025-07-17 11:28:29,724 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
ERROR - 2025-07-17 11:28:29,725 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
INFO - 2025-07-17 11:28:29,725 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:28:29,725 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:28:29,725 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:28:29,725 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:28:29,725 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'None'}
INFO - 2025-07-17 11:28:29,725 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,725 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:28:29,727 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:28:29,728 - apiutil.py:183 -[apiutil:extract_data_list] - json提取到参数：{'goodsId': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:28:29,728 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:28:29,728 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:28:29,728 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,729 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,730 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,735 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:28:29,735 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:28:29,735 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:28:29,735 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:28:29,735 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,735 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,735 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819,33809635011,56996760797,82193785267,74190550836', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:28:29,737 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "\u4e0d\u5b58\u5728\u8be5\u5546\u54c1",
  "error_code": "4000",
  "goodsId": "",
  "item": {},
  "secache_date": "2025-07-17 11:28:29",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:28:29,738 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '4000'}}]
INFO - 2025-07-17 11:28:29,738 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【4000】,实际结果【4000】
INFO - 2025-07-17 11:28:29,738 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,738 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,740 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,765 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:28:29,765 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:28:29,765 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:28:29,765 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：提交订单
INFO - 2025-07-17 11:28:29,765 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,766 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,766 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '74190550836', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': '127839112', 'price': '128', 'freight_insurance': '0.0', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:28:29,768 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:28:29",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "124555134326926208399",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:28:29,768 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:28:29,768 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:28:29,769 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}, {'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:28:29,769 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:28:29,769 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:28:29,769 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,770 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,771 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,778 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:28:29,778 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:28:29,778 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:28:29,778 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:28:29,779 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,779 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,779 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '124555134326926208399', 'userId': '1262204802105607729', 'timeStamp': '1752722909'}}
INFO - 2025-07-17 11:28:29,780 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:28:29",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:28:29,781 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '订单支付成功'}}, {'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:28:29,781 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【订单支付成功】,实际结果【订单支付成功】
INFO - 2025-07-17 11:28:29,781 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:28:29,781 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,782 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,783 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,787 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:28:29,787 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:28:29,787 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,787 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常新增用户
INFO - 2025-07-17 11:28:29,787 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,787 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,788 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': '563C38CeCB1Af2308b2aDBf6B6A05'}}
INFO - 2025-07-17 11:28:29,790 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u65b0\u589e\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:28:29,790 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增成功'}}]
INFO - 2025-07-17 11:28:29,790 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增成功】,实际结果【新增成功】
INFO - 2025-07-17 11:28:29,790 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,791 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,792 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,794 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:28:29,794 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:28:29,794 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,794 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少token
INFO - 2025-07-17 11:28:29,794 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,794 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,794 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:28:29,796 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:28:29,796 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:28:29,796 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:28:29,796 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,797 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,798 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,799 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:28:29,799 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:28:29,799 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,800 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数username
INFO - 2025-07-17 11:28:29,800 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,800 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,800 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:28:29,802 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:28:29,802 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:28:29,802 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:28:29,802 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,803 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,804 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,806 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:28:29,806 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:28:29,806 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,806 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数role_id
INFO - 2025-07-17 11:28:29,806 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,806 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,806 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:28:29,809 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:28:29,809 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:28:29,810 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:28:29,810 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,810 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,811 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,813 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：修改用户
INFO - 2025-07-17 11:28:29,813 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/updateUser
INFO - 2025-07-17 11:28:29,813 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,813 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常修改用户信息
INFO - 2025-07-17 11:28:29,813 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,813 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,813 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789#$123', 'role_id': 89588181111112343, 'dates': '2023-12-31', 'phone': 13800000000}}
INFO - 2025-07-17 11:28:29,816 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u66f4\u65b0\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:28:29,817 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '更新成功'}}]
INFO - 2025-07-17 11:28:29,817 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【更新成功】,实际结果【更新成功】
INFO - 2025-07-17 11:28:29,817 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,818 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,819 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,821 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:28:29,821 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:28:29,821 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,821 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效删除用户
INFO - 2025-07-17 11:28:29,821 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,821 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,822 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:28:29,824 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u5220\u9664\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:28:29,824 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除成功'}}]
INFO - 2025-07-17 11:28:29,824 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除成功】,实际结果【删除成功!】
INFO - 2025-07-17 11:28:29,824 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,825 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,826 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,828 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:28:29,828 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:28:29,828 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,828 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid不存在
INFO - 2025-07-17 11:28:29,828 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,828 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,828 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:28:29,831 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:28:29,831 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:28:29,831 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:28:29,831 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,832 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,833 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,835 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:28:29,835 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:28:29,835 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,835 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid为空
INFO - 2025-07-17 11:28:29,835 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,835 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,836 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:28:29,838 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:28:29,838 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:28:29,838 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:28:29,838 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,839 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,840 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,841 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:28:29,842 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:28:29,842 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,842 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·缺少必填参数
INFO - 2025-07-17 11:28:29,842 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,842 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,844 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:28:29,844 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:28:29,844 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:28:29,844 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,845 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:28:29,847 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:28:29,849 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户查询
INFO - 2025-07-17 11:28:29,849 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/queryUser
INFO - 2025-07-17 11:28:29,849 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:28:29,849 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效查询用户
INFO - 2025-07-17 11:28:29,849 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:28:29,849 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:28:29,849 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:28:29,852 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u67e5\u8be2\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:28:29,853 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '查询成功'}}, {'eq': {'msg_code': 200}}]
INFO - 2025-07-17 11:28:29,853 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【查询成功】,实际结果【查询成功!】
INFO - 2025-07-17 11:28:29,853 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg_code': 200}，等于预期结果：{'msg_code': 200}
INFO - 2025-07-17 11:28:29,853 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:28:29,854 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
ERROR - 2025-07-17 11:32:17,125 - readyaml.py:26 -[readyaml:get_testcase_yaml] - [./testcase/ProductManager/shoppingJoinCart.yaml]文件编码格式错误，--尝试使用utf-8编码解码YAML文件时发生了错误，请确保你的yaml文件是UTF-8格式！
INFO - 2025-07-17 11:33:16,603 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-07-17 11:33:16,603 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/login
INFO - 2025-07-17 11:33:16,603 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,603 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：用户名和密码正确登录验证
INFO - 2025-07-17 11:33:16,603 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,603 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,604 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_name': 'test01', 'passwd': 'admin123'}}
INFO - 2025-07-17 11:33:16,613 - sendrequest.py:108 -[sendrequest:send_request] - cookie：{'Cookie': {'access_token_cookie': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MjcyMzE5NiwianRpIjoiYjM0NTYyYjEtMDI1Yy00NTViLTg1NzItMjI4MDkzMzEwNzkwIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImV4YW1wbGVfdXNlciIsIm5iZiI6MTc1MjcyMzE5NiwiY3NyZiI6Ijg0YTM4YWYxLTM3MDktNDE3YS04MTA5LTgyZWRjNWIyZTBlZSIsImV4cCI6MTc1MjcyNDA5Nn0.gVZntv6FdirigjtZFcUyWQpliJ0Snd1Hnn99NO6OFdc', 'csrf_access_token': '84a38af1-3709-417a-8109-82edc5b2e0ee'}}
INFO - 2025-07-17 11:33:16,614 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u767b\u5f55\u6210\u529f",
  "msg_code": 200,
  "orgId": "4140913758110176843",
  "token": "500370874e42E7cd2bAF96996e6bd",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:33:16,614 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:33:16,614 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': 'none'}}, {'eq': {'msg': '登录成功'}}]
INFO - 2025-07-17 11:33:16,615 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【None】,实际结果【[None]】
INFO - 2025-07-17 11:33:16,615 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg': '登录成功'}，等于预期结果：{'msg': '登录成功'}
INFO - 2025-07-17 11:33:16,615 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,615 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,619 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:33:16,619 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:33:16,619 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:33:16,619 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:33:16,619 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': '500370874e42E7cd2bAF96996e6bd'}
INFO - 2025-07-17 11:33:16,619 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,620 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:33:16,621 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:33:16,622 - apiutil_business.py:205 -[apiutil_business:extract_data_list] - json提取到参数：{'goodsIds': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:33:16,622 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:33:16,623 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:33:16,623 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,627 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,628 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,631 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:33:16,631 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:33:16,631 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,631 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:33:16,631 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,631 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,631 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:33:16,637 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "api_type": "pinduoduo",
  "cache": 0,
  "call_args": {
    "num_iid": "1620002566"
  },
  "client_ip": "106.6.39.223",
  "error": "",
  "error_code": "0000",
  "execution_time": "0.437",
  "goodsId": "82193785267",
  "item": {
    "AmountOnSale": 3188,
    "CategoryId": 8484,
    "Coupon": null,
    "Delivery": {
      "From": null,
      "Info": null,
      "MarkInfo": null,
      "Postage": "\u5feb\u9012 \u514d\u8fd0\u8d39",
      "To": null,
      "extras": null
    },
    "DescUrl": null,
    "Detail": "<img src=\"https://img.pddpic.com/mms-material-img/2022-09-18/3f89d470-1af8-4dee-b529-6d62aa2ea3b7.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-02-15/ddf6fe7b-b536-4183-932d-69a1189a3f59.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/20f659b04d3e7e5851c27ff9931c96fc.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-11-14/4420a8c3-49ed-46d8-ab55-15e7a638ca31.jpg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/26c3e9d5cfbaf4e8f13b2bdd38f48d71.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/0aa872fa74599dad7b6aefe6b6c035c0.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6bc959e32a30424c7a5284a37676999c.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/1fa9861a8c99c5e9e8119fd2239fef5a.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/b62cabf1d2320c5761e3f4c15203fb20.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6f6e54376a66cbc78e16700d4c424fe1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/2f60753dfc875a6876adc35833a69d31.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/ae0116e589d8de712f8dafd0c356cefe.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/da910c98fcc8de1b4d2d1498cd7899fd.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/140349649d8b7d08c8e88bfbbaa2f900.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/a953bae2eeb7364ef3ef2976a97d07eb.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4da59828136c3b1308aad0aa990778a7.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4a365b61a80e47288c8609ccd5982396.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/cd0a8a96b783a51236812ce24c59a329.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/16008ac19768d05e7dee16406ff958a1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/ef1d17b69ebf9449a8bb52459b168c26.jpeg\" style=\"width:100%;\"/>",
    "FansCount": null,
    "ImageUrls": [
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/d209ef7bcc9183c3bb8ca1dfdb108d49.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/74257ab65f3f00da7a90fde9042fe640.jpeg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/e8fbd9cb-cc74-4caa-9380-84c46d27b008.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/d76f515b-e375-4060-b94e-cf64f6b0964e.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/f2f279b5-6000-4fbe-b99b-7c1cbd7884ea.jpg"
    ],
    "MainImageVideo": null,
    "OfferId": 1620002566,
    "OriginalPriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 115,
        "Range": "3"
      }
    ],
    "PriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 95.4,
        "Range": "3"
      }
    ],
    "ProductFeatureTuples": [
      {
        "Item1": "\u9762\u6599\u6750\u8d28",
        "Item2": "\u4eff\u76ae\u8349"
      },
      {
        "Item1": "\u6210\u5206\u542b\u91cf",
        "Item2": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09"
      },
      {
        "Item1": "\u7248\u578b",
        "Item2": "\u4fee\u8eab"
      },
      {
        "Item1": "\u9886\u578b",
        "Item2": "\u5706\u9886"
      },
      {
        "Item1": "\u8863\u957f",
        "Item2": "\u77ed\u6b3e"
      },
      {
        "Item1": "\u662f\u5426\u5e26\u6bdb\u9886",
        "Item2": "\u4e0d\u5e26\u6bdb\u9886"
      },
      {
        "Item1": "\u4e3b\u98ce\u683c",
        "Item2": "\u6c14\u8d28\u540d\u5a9b"
      }
    ],
    "ProductFeatures": {
      "\u4e3b\u98ce\u683c": "\u6c14\u8d28\u540d\u5a9b",
      "\u6210\u5206\u542b\u91cf": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09",
      "\u662f\u5426\u5e26\u6bdb\u9886": "\u4e0d\u5e26\u6bdb\u9886",
      "\u7248\u578b": "\u4fee\u8eab",
      "\u8863\u957f": "\u77ed\u6b3e",
      "\u9762\u6599\u6750\u8d28": "\u4eff\u76ae\u8349",
      "\u9886\u578b": "\u5706\u9886"
    },
    "RateCount": null,
    "RetryCount": 0,
    "SellCount": "\u5df2\u62fc4.2\u4e07\u4ef6",
    "SellerId": null,
    "SellerNick": null,
    "ShopId": "461742",
    "ShopInfo": null,
    "ShopName": "\u679c\u679c\u5bb6\u6c14\u8d28\u5973\u88c5",
    "ShopUrl": "http://yangkeduo.com/mall_page.html?mall_id=461742",
    "SkuMaps": [
      {
        "AmountOnSale": 73,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357891",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 65,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357892",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 82,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357893",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357894",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 94,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357895",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 105,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357896",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 1051,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357897",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 88,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357898",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 80,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357899",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 660,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357900",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 126,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357901",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357902",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 98,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
        "Key": "1215:105309781;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107855",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 95,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/3660b7893ca5cda1ffcea745d10b2506.jpeg",
        "Key": "1215:105309781;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107856",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/a4a5a671afbb2d8e1f4c21c0ced3bea8.jpeg",
        "Key": "1215:105309781;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107857",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/f0551176629bf81f25757c160198dba1.jpeg",
        "Key": "1215:105309781;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107858",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 99,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/801a2e23140bfe76229f02aab0a8a5fe.jpeg",
        "Key": "1215:105309781;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107853",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 100,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/2f202934f16f0eee41257b77bf489262.jpeg",
        "Key": "1215:105309781;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107854",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      }
    ],
    "SkuProps": [
      {
        "IsImg": true,
        "Prop": "\u989c\u8272",
        "Value": [
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
            "name": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)",
            "value": "1215:1115500378"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
            "name": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:1115501666"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
            "name": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:105309781"
          }
        ]
      },
      {
        "IsImg": false,
        "Prop": "\u5c3a\u7801",
        "Value": [
          {
            "name": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
            "value": "1226:119128"
          },
          {
            "name": "M\uff0890-100\u65a4\uff09",
            "value": "1226:96784"
          },
          {
            "name": "L\uff08100-110\u65a4\uff09",
            "value": "1226:33651"
          },
          {
            "name": "XL\uff08110-120\u65a4\uff09",
            "value": "1226:33652"
          },
          {
            "name": "2XL\uff08120-130\u65a4\uff09",
            "value": "1226:33653"
          },
          {
            "name": "3XL\uff08130-140\u65a4\uff09",
            "value": "1226:33656"
          }
        ]
      }
    ],
    "SourceType": 6,
    "Subject": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
    "Tag": null,
    "Unit": null,
    "UserId": "461742",
    "_ddf": "app",
    "format_check": "ok"
  },
  "reason": "",
  "request_id": "gw-4.63510267214bd",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-17 11:33:16",
  "secache_time": 1666253415,
  "server_memory": "0.84MB",
  "server_time": "Beijing/2023-10-20 16:10:15",
  "translate_engine": "baidu",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:33:16,638 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:33:16,638 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:33:16,638 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,638 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,640 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,642 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:33:16,642 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:33:16,642 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,643 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：详情页面选择规格，提交订单
INFO - 2025-07-17 11:33:16,643 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,643 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,643 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': 127839112, 'price': '128', 'freight_insurance': '0.00', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:33:16,645 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:33:16",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "873257189271982406610",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:33:16,645 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'orderNumber': '873257189271982406610'}
INFO - 2025-07-17 11:33:16,646 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'userId': '1262204802105607729'}
INFO - 2025-07-17 11:33:16,646 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}]
INFO - 2025-07-17 11:33:16,646 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:33:16,646 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,646 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,647 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,653 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:33:16,654 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:33:16,654 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,654 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:33:16,654 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,654 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,654 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '873257189271982406610', 'userId': '1262204802105607729', 'timeStamp': '1752723196'}}
INFO - 2025-07-17 11:33:16,656 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:33:16",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:33:16,656 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '订单支付成功'}}]
INFO - 2025-07-17 11:33:16,656 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '订单支付成功'}，等于预期结果：{'message': '订单支付成功'}
INFO - 2025-07-17 11:33:16,656 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,657 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,658 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,662 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：校验订单状态
INFO - 2025-07-17 11:33:16,662 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/checkOrderStatus
INFO - 2025-07-17 11:33:16,662 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,662 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：校验商品订单状态
INFO - 2025-07-17 11:33:16,662 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,662 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,663 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '873257189271982406610', 'timeStamp': '1752723196'}}
INFO - 2025-07-17 11:33:16,664 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "",
  "error_code": "",
  "queryTime": "2025-07-17 11:33:16",
  "status": "0",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:33:16,665 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'status': '0'}}]
INFO - 2025-07-17 11:33:16,665 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'status': '0'}，等于预期结果：{'status': '0'}
INFO - 2025-07-17 11:33:16,665 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,665 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,667 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
ERROR - 2025-07-17 11:33:16,669 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
ERROR - 2025-07-17 11:33:16,670 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
INFO - 2025-07-17 11:33:16,671 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:33:16,671 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:33:16,671 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:33:16,671 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:33:16,671 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'None'}
INFO - 2025-07-17 11:33:16,671 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,671 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:33:16,672 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:33:16,673 - apiutil.py:183 -[apiutil:extract_data_list] - json提取到参数：{'goodsId': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:33:16,673 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:33:16,673 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:33:16,673 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,674 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,675 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,679 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:33:16,679 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:33:16,679 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,679 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:33:16,680 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,680 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,680 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819,33809635011,56996760797,82193785267,74190550836', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:33:16,681 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "\u4e0d\u5b58\u5728\u8be5\u5546\u54c1",
  "error_code": "4000",
  "goodsId": "",
  "item": {},
  "secache_date": "2025-07-17 11:33:16",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:33:16,682 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '4000'}}]
INFO - 2025-07-17 11:33:16,682 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【4000】,实际结果【4000】
INFO - 2025-07-17 11:33:16,682 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,682 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,683 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,709 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：添加购物车
INFO - 2025-07-17 11:33:16,709 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/shoppingJoinCart
INFO - 2025-07-17 11:33:16,709 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,709 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：添加购物车
INFO - 2025-07-17 11:33:16,709 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,709 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,709 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819,33809635011,56996760797,82193785267,74190550836', 'count': 2, 'price': 128, 'timeStamp': '1752723196'}}
INFO - 2025-07-17 11:33:16,711 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "cartList": [],
  "createTime": "2025-07-17 11:33:16",
  "error": "\u5546\u54c1id\u4e0d\u5b58\u5728",
  "error_code": "4000",
  "message": "",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:33:16,712 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
ERROR - 2025-07-17 11:33:16,712 - assertions.py:50 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0000】,实际结果为【4000】
ERROR - 2025-07-17 11:33:16,712 - assertions.py:202 -[assertions:assert_result] - 测试失败
ERROR - 2025-07-17 11:33:16,712 - apiutil.py:115 -[apiutil:specification_yaml] - 
INFO - 2025-07-17 11:33:16,781 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,783 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,791 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:33:16,791 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:33:16,791 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,791 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：提交订单
INFO - 2025-07-17 11:33:16,791 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,791 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,792 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': '127839112', 'price': '128', 'freight_insurance': '0.0', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:33:16,795 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:33:16",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "132908615892404553200",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:33:16,795 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:33:16,795 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:33:16,796 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}, {'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:33:16,796 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:33:16,796 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:33:16,796 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,797 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,800 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,808 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:33:16,808 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:33:16,808 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:33:16,808 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:33:16,808 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,808 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,809 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '132908615892404553200', 'userId': '1262204802105607729', 'timeStamp': '1752723196'}}
INFO - 2025-07-17 11:33:16,811 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:33:16",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:33:16,811 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '订单支付成功'}}, {'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:33:16,812 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【订单支付成功】,实际结果【订单支付成功】
INFO - 2025-07-17 11:33:16,812 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:33:16,812 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,815 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,817 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,830 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:33:16,830 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:33:16,830 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,830 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常新增用户
INFO - 2025-07-17 11:33:16,830 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,830 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,831 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': '500370874e42E7cd2bAF96996e6bd'}}
INFO - 2025-07-17 11:33:16,837 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u65b0\u589e\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:33:16,839 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增成功'}}]
INFO - 2025-07-17 11:33:16,840 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增成功】,实际结果【新增成功】
INFO - 2025-07-17 11:33:16,840 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,843 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,845 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,847 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:33:16,847 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:33:16,847 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,847 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少token
INFO - 2025-07-17 11:33:16,847 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,847 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,847 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:33:16,849 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:33:16,849 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:33:16,849 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:33:16,850 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,850 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,852 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,854 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:33:16,854 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:33:16,854 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,854 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数username
INFO - 2025-07-17 11:33:16,854 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,854 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,855 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:33:16,857 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:33:16,858 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:33:16,858 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:33:16,858 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,859 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,860 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,862 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:33:16,862 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:33:16,862 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,862 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数role_id
INFO - 2025-07-17 11:33:16,862 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,862 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,862 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:33:16,865 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:33:16,865 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:33:16,865 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:33:16,865 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,866 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,867 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,870 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：修改用户
INFO - 2025-07-17 11:33:16,870 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/updateUser
INFO - 2025-07-17 11:33:16,870 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,870 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常修改用户信息
INFO - 2025-07-17 11:33:16,870 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,870 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,870 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789#$123', 'role_id': 89588181111112343, 'dates': '2023-12-31', 'phone': 13800000000}}
INFO - 2025-07-17 11:33:16,873 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u66f4\u65b0\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:33:16,873 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '更新成功'}}]
INFO - 2025-07-17 11:33:16,873 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【更新成功】,实际结果【更新成功】
INFO - 2025-07-17 11:33:16,873 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,876 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,879 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,882 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:33:16,882 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:33:16,882 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,882 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效删除用户
INFO - 2025-07-17 11:33:16,882 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,882 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,882 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:33:16,885 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u5220\u9664\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:33:16,885 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除成功'}}]
INFO - 2025-07-17 11:33:16,885 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除成功】,实际结果【删除成功!】
INFO - 2025-07-17 11:33:16,885 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,887 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,891 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,892 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:33:16,893 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:33:16,893 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,893 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid不存在
INFO - 2025-07-17 11:33:16,893 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,893 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,893 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:33:16,895 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:33:16,896 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:33:16,896 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:33:16,896 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,897 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,899 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,902 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:33:16,902 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:33:16,902 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,904 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid为空
INFO - 2025-07-17 11:33:16,904 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,904 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,904 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:33:16,906 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:33:16,907 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:33:16,907 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:33:16,907 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,908 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,909 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,910 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:33:16,910 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:33:16,910 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,910 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·缺少必填参数
INFO - 2025-07-17 11:33:16,910 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,910 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,912 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:33:16,912 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:33:16,913 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:33:16,913 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,913 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:33:16,915 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:33:16,916 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户查询
INFO - 2025-07-17 11:33:16,916 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/queryUser
INFO - 2025-07-17 11:33:16,916 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:33:16,916 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效查询用户
INFO - 2025-07-17 11:33:16,916 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:33:16,917 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:33:16,917 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:33:16,919 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u67e5\u8be2\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:33:16,919 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '查询成功'}}, {'eq': {'msg_code': 200}}]
INFO - 2025-07-17 11:33:16,919 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【查询成功】,实际结果【查询成功!】
INFO - 2025-07-17 11:33:16,919 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg_code': 200}，等于预期结果：{'msg_code': 200}
INFO - 2025-07-17 11:33:16,919 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:33:16,920 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,470 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-07-17 11:36:48,470 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/login
INFO - 2025-07-17 11:36:48,471 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,471 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：用户名和密码正确登录验证
INFO - 2025-07-17 11:36:48,471 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,471 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,471 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_name': 'test01', 'passwd': 'admin123'}}
INFO - 2025-07-17 11:36:48,504 - sendrequest.py:108 -[sendrequest:send_request] - cookie：{'Cookie': {'access_token_cookie': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MjcyMzQwOCwianRpIjoiZjRmODY3MmMtODcxNy00OGE0LWEzZWMtNjczMjNhNDYzODQyIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImV4YW1wbGVfdXNlciIsIm5iZiI6MTc1MjcyMzQwOCwiY3NyZiI6IjQ4ZjA0MjAxLWNmOGYtNGY5OS1iZGIzLTc2Y2JhY2FmMDM3NSIsImV4cCI6MTc1MjcyNDMwOH0.safaIMWK3gaaQUZz_mgM0d5hEOKutdAQPnO9rBT2cZk', 'csrf_access_token': '48f04201-cf8f-4f99-bdb3-76cbacaf0375'}}
INFO - 2025-07-17 11:36:48,504 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u767b\u5f55\u6210\u529f",
  "msg_code": 200,
  "orgId": "6140913758128971280",
  "token": "1Ac2aBD2F19E1Aecf6F733e1ff9A1",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:36:48,505 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:36:48,505 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': 'none'}}, {'eq': {'msg': '登录成功'}}]
INFO - 2025-07-17 11:36:48,506 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【None】,实际结果【[None]】
INFO - 2025-07-17 11:36:48,507 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg': '登录成功'}，等于预期结果：{'msg': '登录成功'}
INFO - 2025-07-17 11:36:48,508 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,509 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,515 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:36:48,515 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:36:48,515 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:36:48,515 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:36:48,515 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': '1Ac2aBD2F19E1Aecf6F733e1ff9A1'}
INFO - 2025-07-17 11:36:48,515 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,515 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:36:48,518 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:36:48,519 - apiutil_business.py:205 -[apiutil_business:extract_data_list] - json提取到参数：{'goodsIds': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:36:48,519 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:36:48,519 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:36:48,519 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,524 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,526 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,529 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:36:48,529 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:36:48,529 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,529 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:36:48,529 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,529 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,529 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:36:48,532 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "api_type": "pinduoduo",
  "cache": 0,
  "call_args": {
    "num_iid": "1620002566"
  },
  "client_ip": "106.6.39.223",
  "error": "",
  "error_code": "0000",
  "execution_time": "0.437",
  "goodsId": "33809635011",
  "item": {
    "AmountOnSale": 3188,
    "CategoryId": 8484,
    "Coupon": null,
    "Delivery": {
      "From": null,
      "Info": null,
      "MarkInfo": null,
      "Postage": "\u5feb\u9012 \u514d\u8fd0\u8d39",
      "To": null,
      "extras": null
    },
    "DescUrl": null,
    "Detail": "<img src=\"https://img.pddpic.com/mms-material-img/2022-09-18/3f89d470-1af8-4dee-b529-6d62aa2ea3b7.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-02-15/ddf6fe7b-b536-4183-932d-69a1189a3f59.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/20f659b04d3e7e5851c27ff9931c96fc.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-11-14/4420a8c3-49ed-46d8-ab55-15e7a638ca31.jpg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/26c3e9d5cfbaf4e8f13b2bdd38f48d71.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/0aa872fa74599dad7b6aefe6b6c035c0.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6bc959e32a30424c7a5284a37676999c.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/1fa9861a8c99c5e9e8119fd2239fef5a.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/b62cabf1d2320c5761e3f4c15203fb20.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6f6e54376a66cbc78e16700d4c424fe1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/2f60753dfc875a6876adc35833a69d31.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/ae0116e589d8de712f8dafd0c356cefe.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/da910c98fcc8de1b4d2d1498cd7899fd.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/140349649d8b7d08c8e88bfbbaa2f900.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/a953bae2eeb7364ef3ef2976a97d07eb.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4da59828136c3b1308aad0aa990778a7.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4a365b61a80e47288c8609ccd5982396.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/cd0a8a96b783a51236812ce24c59a329.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/16008ac19768d05e7dee16406ff958a1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/ef1d17b69ebf9449a8bb52459b168c26.jpeg\" style=\"width:100%;\"/>",
    "FansCount": null,
    "ImageUrls": [
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/d209ef7bcc9183c3bb8ca1dfdb108d49.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/74257ab65f3f00da7a90fde9042fe640.jpeg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/e8fbd9cb-cc74-4caa-9380-84c46d27b008.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/d76f515b-e375-4060-b94e-cf64f6b0964e.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/f2f279b5-6000-4fbe-b99b-7c1cbd7884ea.jpg"
    ],
    "MainImageVideo": null,
    "OfferId": 1620002566,
    "OriginalPriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 115,
        "Range": "3"
      }
    ],
    "PriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 95.4,
        "Range": "3"
      }
    ],
    "ProductFeatureTuples": [
      {
        "Item1": "\u9762\u6599\u6750\u8d28",
        "Item2": "\u4eff\u76ae\u8349"
      },
      {
        "Item1": "\u6210\u5206\u542b\u91cf",
        "Item2": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09"
      },
      {
        "Item1": "\u7248\u578b",
        "Item2": "\u4fee\u8eab"
      },
      {
        "Item1": "\u9886\u578b",
        "Item2": "\u5706\u9886"
      },
      {
        "Item1": "\u8863\u957f",
        "Item2": "\u77ed\u6b3e"
      },
      {
        "Item1": "\u662f\u5426\u5e26\u6bdb\u9886",
        "Item2": "\u4e0d\u5e26\u6bdb\u9886"
      },
      {
        "Item1": "\u4e3b\u98ce\u683c",
        "Item2": "\u6c14\u8d28\u540d\u5a9b"
      }
    ],
    "ProductFeatures": {
      "\u4e3b\u98ce\u683c": "\u6c14\u8d28\u540d\u5a9b",
      "\u6210\u5206\u542b\u91cf": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09",
      "\u662f\u5426\u5e26\u6bdb\u9886": "\u4e0d\u5e26\u6bdb\u9886",
      "\u7248\u578b": "\u4fee\u8eab",
      "\u8863\u957f": "\u77ed\u6b3e",
      "\u9762\u6599\u6750\u8d28": "\u4eff\u76ae\u8349",
      "\u9886\u578b": "\u5706\u9886"
    },
    "RateCount": null,
    "RetryCount": 0,
    "SellCount": "\u5df2\u62fc4.2\u4e07\u4ef6",
    "SellerId": null,
    "SellerNick": null,
    "ShopId": "461742",
    "ShopInfo": null,
    "ShopName": "\u679c\u679c\u5bb6\u6c14\u8d28\u5973\u88c5",
    "ShopUrl": "http://yangkeduo.com/mall_page.html?mall_id=461742",
    "SkuMaps": [
      {
        "AmountOnSale": 73,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357891",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 65,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357892",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 82,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357893",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357894",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 94,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357895",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 105,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357896",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 1051,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357897",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 88,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357898",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 80,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357899",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 660,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357900",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 126,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357901",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357902",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 98,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
        "Key": "1215:105309781;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107855",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 95,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/3660b7893ca5cda1ffcea745d10b2506.jpeg",
        "Key": "1215:105309781;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107856",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/a4a5a671afbb2d8e1f4c21c0ced3bea8.jpeg",
        "Key": "1215:105309781;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107857",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/f0551176629bf81f25757c160198dba1.jpeg",
        "Key": "1215:105309781;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107858",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 99,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/801a2e23140bfe76229f02aab0a8a5fe.jpeg",
        "Key": "1215:105309781;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107853",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 100,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/2f202934f16f0eee41257b77bf489262.jpeg",
        "Key": "1215:105309781;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107854",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      }
    ],
    "SkuProps": [
      {
        "IsImg": true,
        "Prop": "\u989c\u8272",
        "Value": [
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
            "name": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)",
            "value": "1215:1115500378"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
            "name": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:1115501666"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
            "name": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:105309781"
          }
        ]
      },
      {
        "IsImg": false,
        "Prop": "\u5c3a\u7801",
        "Value": [
          {
            "name": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
            "value": "1226:119128"
          },
          {
            "name": "M\uff0890-100\u65a4\uff09",
            "value": "1226:96784"
          },
          {
            "name": "L\uff08100-110\u65a4\uff09",
            "value": "1226:33651"
          },
          {
            "name": "XL\uff08110-120\u65a4\uff09",
            "value": "1226:33652"
          },
          {
            "name": "2XL\uff08120-130\u65a4\uff09",
            "value": "1226:33653"
          },
          {
            "name": "3XL\uff08130-140\u65a4\uff09",
            "value": "1226:33656"
          }
        ]
      }
    ],
    "SourceType": 6,
    "Subject": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
    "Tag": null,
    "Unit": null,
    "UserId": "461742",
    "_ddf": "app",
    "format_check": "ok"
  },
  "reason": "",
  "request_id": "gw-4.63510267214bd",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-17 11:36:48",
  "secache_time": 1666253415,
  "server_memory": "0.84MB",
  "server_time": "Beijing/2023-10-20 16:10:15",
  "translate_engine": "baidu",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:36:48,534 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:36:48,535 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:36:48,535 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,536 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,540 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,549 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:36:48,549 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:36:48,549 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,549 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：详情页面选择规格，提交订单
INFO - 2025-07-17 11:36:48,550 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,550 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,550 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': 127839112, 'price': '128', 'freight_insurance': '0.00', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:36:48,554 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:36:48",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "678255111557803486753",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:36:48,554 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'orderNumber': '678255111557803486753'}
INFO - 2025-07-17 11:36:48,555 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'userId': '1262204802105607729'}
INFO - 2025-07-17 11:36:48,555 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}]
INFO - 2025-07-17 11:36:48,555 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:36:48,555 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,556 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,558 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,567 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:36:48,567 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:36:48,567 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,567 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:36:48,567 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,567 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,568 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '678255111557803486753', 'userId': '1262204802105607729', 'timeStamp': '1752723408'}}
INFO - 2025-07-17 11:36:48,570 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:36:48",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:36:48,570 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '订单支付成功'}}]
INFO - 2025-07-17 11:36:48,571 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '订单支付成功'}，等于预期结果：{'message': '订单支付成功'}
INFO - 2025-07-17 11:36:48,571 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,571 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,573 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,579 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：校验订单状态
INFO - 2025-07-17 11:36:48,579 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/checkOrderStatus
INFO - 2025-07-17 11:36:48,579 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,579 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：校验商品订单状态
INFO - 2025-07-17 11:36:48,579 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,579 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,579 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '678255111557803486753', 'timeStamp': '1752723408'}}
INFO - 2025-07-17 11:36:48,582 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "",
  "error_code": "",
  "queryTime": "2025-07-17 11:36:48",
  "status": "0",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:36:48,583 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'status': '0'}}]
INFO - 2025-07-17 11:36:48,583 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'status': '0'}，等于预期结果：{'status': '0'}
INFO - 2025-07-17 11:36:48,583 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,585 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,587 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
ERROR - 2025-07-17 11:36:48,591 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
ERROR - 2025-07-17 11:36:48,592 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
INFO - 2025-07-17 11:36:48,593 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:36:48,593 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:36:48,593 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:36:48,593 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:36:48,593 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'None'}
INFO - 2025-07-17 11:36:48,593 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,593 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:36:48,596 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:36:48,596 - apiutil.py:183 -[apiutil:extract_data_list] - json提取到参数：{'goodsId': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:36:48,596 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:36:48,597 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:36:48,597 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,598 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,599 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,609 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:36:48,609 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:36:48,609 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,609 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:36:48,610 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,610 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,611 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819,33809635011,56996760797,82193785267,74190550836', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:36:48,619 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "\u4e0d\u5b58\u5728\u8be5\u5546\u54c1",
  "error_code": "4000",
  "goodsId": "",
  "item": {},
  "secache_date": "2025-07-17 11:36:48",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:36:48,620 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '4000'}}]
INFO - 2025-07-17 11:36:48,620 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【4000】,实际结果【4000】
INFO - 2025-07-17 11:36:48,620 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,622 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,625 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
ERROR - 2025-07-17 11:36:48,669 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：goodsId,--list indices must be integers or slices, not str
INFO - 2025-07-17 11:36:48,669 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：添加购物车
INFO - 2025-07-17 11:36:48,669 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/shoppingJoinCart
INFO - 2025-07-17 11:36:48,669 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,669 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：添加购物车
INFO - 2025-07-17 11:36:48,669 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,670 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,670 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': 'None', 'count': 2, 'price': 128, 'timeStamp': '1752723408'}}
INFO - 2025-07-17 11:36:48,672 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "cartList": [],
  "createTime": "2025-07-17 11:36:48",
  "error": "\u5546\u54c1id\u4e0d\u5b58\u5728",
  "error_code": "4000",
  "message": "",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:36:48,672 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
ERROR - 2025-07-17 11:36:48,672 - assertions.py:50 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0000】,实际结果为【4000】
ERROR - 2025-07-17 11:36:48,672 - assertions.py:202 -[assertions:assert_result] - 测试失败
ERROR - 2025-07-17 11:36:48,673 - apiutil.py:115 -[apiutil:specification_yaml] - 
INFO - 2025-07-17 11:36:48,749 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,750 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,753 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:36:48,753 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:36:48,753 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,753 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：提交订单
INFO - 2025-07-17 11:36:48,753 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,753 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,753 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '82193785267', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': '127839112', 'price': '128', 'freight_insurance': '0.0', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:36:48,756 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:36:48",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "600426686167864345702",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:36:48,756 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:36:48,757 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:36:48,757 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}, {'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:36:48,757 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:36:48,758 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:36:48,758 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,759 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,760 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,770 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:36:48,770 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:36:48,771 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:36:48,771 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:36:48,771 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,771 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,771 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '600426686167864345702', 'userId': '1262204802105607729', 'timeStamp': '1752723408'}}
INFO - 2025-07-17 11:36:48,773 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:36:48",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:36:48,774 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '订单支付成功'}}, {'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:36:48,774 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【订单支付成功】,实际结果【订单支付成功】
INFO - 2025-07-17 11:36:48,774 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:36:48,774 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,775 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,776 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,781 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:36:48,782 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:36:48,782 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,782 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常新增用户
INFO - 2025-07-17 11:36:48,782 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,782 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,782 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': '1Ac2aBD2F19E1Aecf6F733e1ff9A1'}}
INFO - 2025-07-17 11:36:48,784 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u65b0\u589e\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:36:48,785 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增成功'}}]
INFO - 2025-07-17 11:36:48,785 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增成功】,实际结果【新增成功】
INFO - 2025-07-17 11:36:48,785 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,786 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,787 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,788 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:36:48,788 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:36:48,789 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,789 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少token
INFO - 2025-07-17 11:36:48,789 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,789 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,789 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:36:48,791 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:36:48,791 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:36:48,791 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:36:48,791 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,792 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,794 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,796 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:36:48,796 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:36:48,796 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,796 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数username
INFO - 2025-07-17 11:36:48,796 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,796 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,796 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:36:48,799 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:36:48,799 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:36:48,799 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:36:48,799 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,800 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,802 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,803 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:36:48,803 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:36:48,803 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,804 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数role_id
INFO - 2025-07-17 11:36:48,804 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,804 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,804 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:36:48,806 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:36:48,806 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:36:48,806 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:36:48,806 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,807 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,808 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,809 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：修改用户
INFO - 2025-07-17 11:36:48,809 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/updateUser
INFO - 2025-07-17 11:36:48,809 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,810 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常修改用户信息
INFO - 2025-07-17 11:36:48,810 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,810 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,810 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789#$123', 'role_id': 89588181111112343, 'dates': '2023-12-31', 'phone': 13800000000}}
INFO - 2025-07-17 11:36:48,812 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u66f4\u65b0\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:36:48,812 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '更新成功'}}]
INFO - 2025-07-17 11:36:48,812 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【更新成功】,实际结果【更新成功】
INFO - 2025-07-17 11:36:48,812 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,813 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,814 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,816 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:36:48,816 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:36:48,816 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,816 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效删除用户
INFO - 2025-07-17 11:36:48,816 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,816 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,817 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:36:48,819 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u5220\u9664\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:36:48,819 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除成功'}}]
INFO - 2025-07-17 11:36:48,819 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除成功】,实际结果【删除成功!】
INFO - 2025-07-17 11:36:48,819 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,820 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,821 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,823 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:36:48,823 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:36:48,823 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,823 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid不存在
INFO - 2025-07-17 11:36:48,823 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,823 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,823 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:36:48,825 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:36:48,826 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:36:48,826 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:36:48,826 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,827 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,828 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,830 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:36:48,830 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:36:48,830 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,830 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid为空
INFO - 2025-07-17 11:36:48,830 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,830 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,830 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:36:48,832 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:36:48,833 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:36:48,833 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:36:48,833 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,834 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,835 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,836 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:36:48,836 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:36:48,836 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,836 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·缺少必填参数
INFO - 2025-07-17 11:36:48,836 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,836 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,839 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:36:48,839 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:36:48,839 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:36:48,839 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,840 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:36:48,841 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:36:48,842 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户查询
INFO - 2025-07-17 11:36:48,843 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/queryUser
INFO - 2025-07-17 11:36:48,843 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:36:48,843 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效查询用户
INFO - 2025-07-17 11:36:48,843 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:36:48,843 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:36:48,843 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:36:48,845 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u67e5\u8be2\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:36:48,845 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '查询成功'}}, {'eq': {'msg_code': 200}}]
INFO - 2025-07-17 11:36:48,845 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【查询成功】,实际结果【查询成功!】
INFO - 2025-07-17 11:36:48,845 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg_code': 200}，等于预期结果：{'msg_code': 200}
INFO - 2025-07-17 11:36:48,845 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:36:48,846 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,677 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-07-17 11:37:34,677 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/login
INFO - 2025-07-17 11:37:34,677 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,677 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：用户名和密码正确登录验证
INFO - 2025-07-17 11:37:34,677 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,677 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,677 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_name': 'test01', 'passwd': 'admin123'}}
INFO - 2025-07-17 11:37:34,691 - sendrequest.py:108 -[sendrequest:send_request] - cookie：{'Cookie': {'access_token_cookie': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MjcyMzQ1NCwianRpIjoiM2ZmNzRiMWItN2U5YS00MjQyLTlkYWItMzA3NjAyNzQwZTM0IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImV4YW1wbGVfdXNlciIsIm5iZiI6MTc1MjcyMzQ1NCwiY3NyZiI6ImY2MzRkZmI0LTUyNTYtNDcxZC05ZTUyLWYyY2ZhODA4YmYyYiIsImV4cCI6MTc1MjcyNDM1NH0.nLo4tzrE7Wdd0xU2TupFocMNH2jUTh4dmFiJuFvxxvA', 'csrf_access_token': 'f634dfb4-5256-471d-9e52-f2cfa808bf2b'}}
INFO - 2025-07-17 11:37:34,691 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u767b\u5f55\u6210\u529f",
  "msg_code": 200,
  "orgId": "6140913758128971280",
  "token": "d6cA6793Edad41F70DDCE85cD8021",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:37:34,691 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:37:34,691 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': 'none'}}, {'eq': {'msg': '登录成功'}}]
INFO - 2025-07-17 11:37:34,692 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【None】,实际结果【[None]】
INFO - 2025-07-17 11:37:34,692 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg': '登录成功'}，等于预期结果：{'msg': '登录成功'}
INFO - 2025-07-17 11:37:34,692 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,692 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,697 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:37:34,697 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:37:34,697 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:37:34,697 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:37:34,697 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'd6cA6793Edad41F70DDCE85cD8021'}
INFO - 2025-07-17 11:37:34,697 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,697 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:37:34,699 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:37:34,700 - apiutil_business.py:205 -[apiutil_business:extract_data_list] - json提取到参数：{'goodsIds': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:37:34,700 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:37:34,700 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:37:34,700 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,705 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,707 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,710 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:37:34,710 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:37:34,710 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,710 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:37:34,711 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,711 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,711 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:37:34,713 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "api_type": "pinduoduo",
  "cache": 0,
  "call_args": {
    "num_iid": "1620002566"
  },
  "client_ip": "106.6.39.223",
  "error": "",
  "error_code": "0000",
  "execution_time": "0.437",
  "goodsId": "74190550836",
  "item": {
    "AmountOnSale": 3188,
    "CategoryId": 8484,
    "Coupon": null,
    "Delivery": {
      "From": null,
      "Info": null,
      "MarkInfo": null,
      "Postage": "\u5feb\u9012 \u514d\u8fd0\u8d39",
      "To": null,
      "extras": null
    },
    "DescUrl": null,
    "Detail": "<img src=\"https://img.pddpic.com/mms-material-img/2022-09-18/3f89d470-1af8-4dee-b529-6d62aa2ea3b7.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-02-15/ddf6fe7b-b536-4183-932d-69a1189a3f59.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/20f659b04d3e7e5851c27ff9931c96fc.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-11-14/4420a8c3-49ed-46d8-ab55-15e7a638ca31.jpg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/26c3e9d5cfbaf4e8f13b2bdd38f48d71.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/0aa872fa74599dad7b6aefe6b6c035c0.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6bc959e32a30424c7a5284a37676999c.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/1fa9861a8c99c5e9e8119fd2239fef5a.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/b62cabf1d2320c5761e3f4c15203fb20.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6f6e54376a66cbc78e16700d4c424fe1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/2f60753dfc875a6876adc35833a69d31.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/ae0116e589d8de712f8dafd0c356cefe.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/da910c98fcc8de1b4d2d1498cd7899fd.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/140349649d8b7d08c8e88bfbbaa2f900.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/a953bae2eeb7364ef3ef2976a97d07eb.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4da59828136c3b1308aad0aa990778a7.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4a365b61a80e47288c8609ccd5982396.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/cd0a8a96b783a51236812ce24c59a329.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/16008ac19768d05e7dee16406ff958a1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/ef1d17b69ebf9449a8bb52459b168c26.jpeg\" style=\"width:100%;\"/>",
    "FansCount": null,
    "ImageUrls": [
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/d209ef7bcc9183c3bb8ca1dfdb108d49.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/74257ab65f3f00da7a90fde9042fe640.jpeg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/e8fbd9cb-cc74-4caa-9380-84c46d27b008.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/d76f515b-e375-4060-b94e-cf64f6b0964e.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/f2f279b5-6000-4fbe-b99b-7c1cbd7884ea.jpg"
    ],
    "MainImageVideo": null,
    "OfferId": 1620002566,
    "OriginalPriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 115,
        "Range": "3"
      }
    ],
    "PriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 95.4,
        "Range": "3"
      }
    ],
    "ProductFeatureTuples": [
      {
        "Item1": "\u9762\u6599\u6750\u8d28",
        "Item2": "\u4eff\u76ae\u8349"
      },
      {
        "Item1": "\u6210\u5206\u542b\u91cf",
        "Item2": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09"
      },
      {
        "Item1": "\u7248\u578b",
        "Item2": "\u4fee\u8eab"
      },
      {
        "Item1": "\u9886\u578b",
        "Item2": "\u5706\u9886"
      },
      {
        "Item1": "\u8863\u957f",
        "Item2": "\u77ed\u6b3e"
      },
      {
        "Item1": "\u662f\u5426\u5e26\u6bdb\u9886",
        "Item2": "\u4e0d\u5e26\u6bdb\u9886"
      },
      {
        "Item1": "\u4e3b\u98ce\u683c",
        "Item2": "\u6c14\u8d28\u540d\u5a9b"
      }
    ],
    "ProductFeatures": {
      "\u4e3b\u98ce\u683c": "\u6c14\u8d28\u540d\u5a9b",
      "\u6210\u5206\u542b\u91cf": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09",
      "\u662f\u5426\u5e26\u6bdb\u9886": "\u4e0d\u5e26\u6bdb\u9886",
      "\u7248\u578b": "\u4fee\u8eab",
      "\u8863\u957f": "\u77ed\u6b3e",
      "\u9762\u6599\u6750\u8d28": "\u4eff\u76ae\u8349",
      "\u9886\u578b": "\u5706\u9886"
    },
    "RateCount": null,
    "RetryCount": 0,
    "SellCount": "\u5df2\u62fc4.2\u4e07\u4ef6",
    "SellerId": null,
    "SellerNick": null,
    "ShopId": "461742",
    "ShopInfo": null,
    "ShopName": "\u679c\u679c\u5bb6\u6c14\u8d28\u5973\u88c5",
    "ShopUrl": "http://yangkeduo.com/mall_page.html?mall_id=461742",
    "SkuMaps": [
      {
        "AmountOnSale": 73,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357891",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 65,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357892",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 82,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357893",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357894",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 94,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357895",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 105,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357896",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 1051,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357897",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 88,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357898",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 80,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357899",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 660,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357900",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 126,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357901",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357902",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 98,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
        "Key": "1215:105309781;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107855",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 95,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/3660b7893ca5cda1ffcea745d10b2506.jpeg",
        "Key": "1215:105309781;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107856",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/a4a5a671afbb2d8e1f4c21c0ced3bea8.jpeg",
        "Key": "1215:105309781;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107857",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/f0551176629bf81f25757c160198dba1.jpeg",
        "Key": "1215:105309781;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107858",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 99,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/801a2e23140bfe76229f02aab0a8a5fe.jpeg",
        "Key": "1215:105309781;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107853",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 100,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/2f202934f16f0eee41257b77bf489262.jpeg",
        "Key": "1215:105309781;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107854",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      }
    ],
    "SkuProps": [
      {
        "IsImg": true,
        "Prop": "\u989c\u8272",
        "Value": [
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
            "name": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)",
            "value": "1215:1115500378"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
            "name": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:1115501666"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
            "name": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:105309781"
          }
        ]
      },
      {
        "IsImg": false,
        "Prop": "\u5c3a\u7801",
        "Value": [
          {
            "name": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
            "value": "1226:119128"
          },
          {
            "name": "M\uff0890-100\u65a4\uff09",
            "value": "1226:96784"
          },
          {
            "name": "L\uff08100-110\u65a4\uff09",
            "value": "1226:33651"
          },
          {
            "name": "XL\uff08110-120\u65a4\uff09",
            "value": "1226:33652"
          },
          {
            "name": "2XL\uff08120-130\u65a4\uff09",
            "value": "1226:33653"
          },
          {
            "name": "3XL\uff08130-140\u65a4\uff09",
            "value": "1226:33656"
          }
        ]
      }
    ],
    "SourceType": 6,
    "Subject": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
    "Tag": null,
    "Unit": null,
    "UserId": "461742",
    "_ddf": "app",
    "format_check": "ok"
  },
  "reason": "",
  "request_id": "gw-4.63510267214bd",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-17 11:37:34",
  "secache_time": 1666253415,
  "server_memory": "0.84MB",
  "server_time": "Beijing/2023-10-20 16:10:15",
  "translate_engine": "baidu",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:37:34,715 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:37:34,715 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:37:34,715 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,715 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,716 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,720 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:37:34,720 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:37:34,720 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,720 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：详情页面选择规格，提交订单
INFO - 2025-07-17 11:37:34,720 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,720 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,720 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': 127839112, 'price': '128', 'freight_insurance': '0.00', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:37:34,723 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:37:34",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "978341956640655544358",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:37:34,724 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'orderNumber': '978341956640655544358'}
INFO - 2025-07-17 11:37:34,724 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'userId': '1262204802105607729'}
INFO - 2025-07-17 11:37:34,724 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}]
INFO - 2025-07-17 11:37:34,724 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:37:34,725 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,725 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,727 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,733 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:37:34,733 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:37:34,733 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,733 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:37:34,733 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,733 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,734 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '978341956640655544358', 'userId': '1262204802105607729', 'timeStamp': '1752723454'}}
INFO - 2025-07-17 11:37:34,735 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:37:34",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:37:34,736 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '订单支付成功'}}]
INFO - 2025-07-17 11:37:34,736 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '订单支付成功'}，等于预期结果：{'message': '订单支付成功'}
INFO - 2025-07-17 11:37:34,736 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,737 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,738 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,742 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：校验订单状态
INFO - 2025-07-17 11:37:34,742 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/checkOrderStatus
INFO - 2025-07-17 11:37:34,742 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,742 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：校验商品订单状态
INFO - 2025-07-17 11:37:34,742 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,742 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,742 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '978341956640655544358', 'timeStamp': '1752723454'}}
INFO - 2025-07-17 11:37:34,744 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "",
  "error_code": "",
  "queryTime": "2025-07-17 11:37:34",
  "status": "0",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:37:34,745 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'status': '0'}}]
INFO - 2025-07-17 11:37:34,745 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'status': '0'}，等于预期结果：{'status': '0'}
INFO - 2025-07-17 11:37:34,745 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,746 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,748 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
ERROR - 2025-07-17 11:37:34,751 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
ERROR - 2025-07-17 11:37:34,752 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
INFO - 2025-07-17 11:37:34,753 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:37:34,753 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:37:34,753 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:37:34,753 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:37:34,753 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'None'}
INFO - 2025-07-17 11:37:34,753 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,753 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:37:34,756 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:37:34,757 - apiutil.py:183 -[apiutil:extract_data_list] - json提取到参数：{'goodsId': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:37:34,757 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:37:34,757 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:37:34,757 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,758 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,760 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,765 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:37:34,765 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:37:34,765 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,765 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:37:34,765 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,765 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,765 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819,33809635011,56996760797,82193785267,74190550836', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:37:34,767 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "\u4e0d\u5b58\u5728\u8be5\u5546\u54c1",
  "error_code": "4000",
  "goodsId": "",
  "item": {},
  "secache_date": "2025-07-17 11:37:34",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:37:34,768 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '4000'}}]
INFO - 2025-07-17 11:37:34,768 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【4000】,实际结果【4000】
INFO - 2025-07-17 11:37:34,768 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,769 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,770 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,796 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：添加购物车
INFO - 2025-07-17 11:37:34,796 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/shoppingJoinCart
INFO - 2025-07-17 11:37:34,796 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,796 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：添加购物车
INFO - 2025-07-17 11:37:34,796 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,796 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,796 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '56996760797', 'count': 2, 'price': 128, 'timeStamp': '1752723454'}}
INFO - 2025-07-17 11:37:34,799 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "cartList": [
    {
      "cid": 453,
      "price": "99.00",
      "productId": "18382788819",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "productName": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "totalPrice": "239.00"
    },
    {
      "cid": 30,
      "price": "108.00",
      "productId": "33809635011",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "productName": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "totalPrice": "347.00"
    },
    {
      "cid": 859,
      "price": "17.80",
      "productId": "56996760797",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "productName": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "totalPrice": "364.80"
    }
  ],
  "createTime": "2025-07-17 11:37:34",
  "error": "",
  "error_code": "0000",
  "message": "success",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:37:34,800 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:37:34,800 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:37:34,800 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,801 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,802 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,805 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:37:34,805 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:37:34,805 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,805 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：提交订单
INFO - 2025-07-17 11:37:34,805 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,805 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,805 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '82193785267', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': '127839112', 'price': '128', 'freight_insurance': '0.0', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:37:34,807 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:37:34",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "294771620174056068842",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:37:34,808 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:37:34,808 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:37:34,808 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}, {'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:37:34,808 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:37:34,808 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:37:34,808 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,809 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,810 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,817 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:37:34,818 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:37:34,818 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:37:34,818 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:37:34,818 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,818 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,818 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '294771620174056068842', 'userId': '1262204802105607729', 'timeStamp': '1752723454'}}
INFO - 2025-07-17 11:37:34,820 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:37:34",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:37:34,820 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '订单支付成功'}}, {'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:37:34,820 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【订单支付成功】,实际结果【订单支付成功】
INFO - 2025-07-17 11:37:34,820 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:37:34,820 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,821 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,822 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,827 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:37:34,827 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:37:34,827 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,827 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常新增用户
INFO - 2025-07-17 11:37:34,827 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,827 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,828 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': 'd6cA6793Edad41F70DDCE85cD8021'}}
INFO - 2025-07-17 11:37:34,830 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u65b0\u589e\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:37:34,830 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增成功'}}]
INFO - 2025-07-17 11:37:34,830 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增成功】,实际结果【新增成功】
INFO - 2025-07-17 11:37:34,830 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,831 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,833 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,834 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:37:34,834 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:37:34,834 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,834 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少token
INFO - 2025-07-17 11:37:34,834 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,834 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,835 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:37:34,837 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:37:34,837 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:37:34,837 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:37:34,837 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,838 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,839 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,841 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:37:34,842 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:37:34,842 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,842 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数username
INFO - 2025-07-17 11:37:34,842 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,842 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,842 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:37:34,844 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:37:34,845 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:37:34,845 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:37:34,845 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,845 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,846 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,853 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:37:34,853 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:37:34,854 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,854 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数role_id
INFO - 2025-07-17 11:37:34,854 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,854 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,854 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:37:34,859 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:37:34,859 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:37:34,859 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:37:34,859 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,860 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,862 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,864 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：修改用户
INFO - 2025-07-17 11:37:34,864 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/updateUser
INFO - 2025-07-17 11:37:34,864 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,864 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常修改用户信息
INFO - 2025-07-17 11:37:34,864 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,864 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,865 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789#$123', 'role_id': 89588181111112343, 'dates': '2023-12-31', 'phone': 13800000000}}
INFO - 2025-07-17 11:37:34,867 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u66f4\u65b0\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:37:34,868 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '更新成功'}}]
INFO - 2025-07-17 11:37:34,868 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【更新成功】,实际结果【更新成功】
INFO - 2025-07-17 11:37:34,868 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,869 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,871 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,878 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:37:34,878 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:37:34,878 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,878 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效删除用户
INFO - 2025-07-17 11:37:34,879 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,879 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,879 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:37:34,881 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u5220\u9664\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:37:34,882 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除成功'}}]
INFO - 2025-07-17 11:37:34,882 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除成功】,实际结果【删除成功!】
INFO - 2025-07-17 11:37:34,882 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,883 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,884 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,885 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:37:34,885 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:37:34,885 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,885 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid不存在
INFO - 2025-07-17 11:37:34,885 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,885 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,886 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:37:34,888 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:37:34,888 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:37:34,888 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:37:34,889 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,889 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,891 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,893 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:37:34,893 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:37:34,893 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,893 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid为空
INFO - 2025-07-17 11:37:34,893 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,893 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,893 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:37:34,896 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:37:34,896 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:37:34,896 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:37:34,896 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,897 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,898 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,900 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:37:34,900 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:37:34,900 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,900 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·缺少必填参数
INFO - 2025-07-17 11:37:34,900 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,900 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,902 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:37:34,903 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:37:34,903 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:37:34,903 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,904 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:37:34,905 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:37:34,906 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户查询
INFO - 2025-07-17 11:37:34,906 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/queryUser
INFO - 2025-07-17 11:37:34,906 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:37:34,906 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效查询用户
INFO - 2025-07-17 11:37:34,906 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:37:34,906 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:37:34,907 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:37:34,909 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u67e5\u8be2\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:37:34,909 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '查询成功'}}, {'eq': {'msg_code': 200}}]
INFO - 2025-07-17 11:37:34,909 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【查询成功】,实际结果【查询成功!】
INFO - 2025-07-17 11:37:34,909 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg_code': 200}，等于预期结果：{'msg_code': 200}
INFO - 2025-07-17 11:37:34,909 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:37:34,910 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,340 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-07-17 11:40:13,340 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/login
INFO - 2025-07-17 11:40:13,340 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,340 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：用户名和密码正确登录验证
INFO - 2025-07-17 11:40:13,340 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,340 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,340 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_name': 'test01', 'passwd': 'admin123'}}
INFO - 2025-07-17 11:40:13,349 - sendrequest.py:108 -[sendrequest:send_request] - cookie：{'Cookie': {'access_token_cookie': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MjcyMzYxMywianRpIjoiMTZlZTc5MzctYWFmZS00MjU3LTg3MzgtMTVhY2YzNTQ4NWY3IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImV4YW1wbGVfdXNlciIsIm5iZiI6MTc1MjcyMzYxMywiY3NyZiI6IjFmZDZjZjQ4LTQ3YTEtNDQ2Yi1hNTUwLTBjZDZkYTkxZTY3MSIsImV4cCI6MTc1MjcyNDUxM30.fyn4c_ir0v_vtcGEO6vkCo25SRdXZuqg43UgJLzT4pE', 'csrf_access_token': '1fd6cf48-47a1-446b-a550-0cd6da91e671'}}
INFO - 2025-07-17 11:40:13,349 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u767b\u5f55\u6210\u529f",
  "msg_code": 200,
  "orgId": "6140913758128971280",
  "token": "27eE93ba7aAcAa91248D5402Acb03",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:40:13,350 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:40:13,350 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': 'none'}}, {'eq': {'msg': '登录成功'}}]
INFO - 2025-07-17 11:40:13,350 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【None】,实际结果【[None]】
INFO - 2025-07-17 11:40:13,350 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg': '登录成功'}，等于预期结果：{'msg': '登录成功'}
INFO - 2025-07-17 11:40:13,350 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,350 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,354 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:40:13,354 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:40:13,354 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:40:13,354 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:40:13,354 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': '27eE93ba7aAcAa91248D5402Acb03'}
INFO - 2025-07-17 11:40:13,354 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,354 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:40:13,356 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:40:13,356 - apiutil_business.py:205 -[apiutil_business:extract_data_list] - json提取到参数：{'goodsIds': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:40:13,357 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:40:13,357 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:40:13,357 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,361 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,362 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,365 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:40:13,365 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:40:13,365 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,365 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:40:13,366 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,366 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,366 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:40:13,369 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "api_type": "pinduoduo",
  "cache": 0,
  "call_args": {
    "num_iid": "1620002566"
  },
  "client_ip": "106.6.39.223",
  "error": "",
  "error_code": "0000",
  "execution_time": "0.437",
  "goodsId": "74190550836",
  "item": {
    "AmountOnSale": 3188,
    "CategoryId": 8484,
    "Coupon": null,
    "Delivery": {
      "From": null,
      "Info": null,
      "MarkInfo": null,
      "Postage": "\u5feb\u9012 \u514d\u8fd0\u8d39",
      "To": null,
      "extras": null
    },
    "DescUrl": null,
    "Detail": "<img src=\"https://img.pddpic.com/mms-material-img/2022-09-18/3f89d470-1af8-4dee-b529-6d62aa2ea3b7.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-02-15/ddf6fe7b-b536-4183-932d-69a1189a3f59.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/20f659b04d3e7e5851c27ff9931c96fc.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-11-14/4420a8c3-49ed-46d8-ab55-15e7a638ca31.jpg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/26c3e9d5cfbaf4e8f13b2bdd38f48d71.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/0aa872fa74599dad7b6aefe6b6c035c0.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6bc959e32a30424c7a5284a37676999c.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/1fa9861a8c99c5e9e8119fd2239fef5a.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/b62cabf1d2320c5761e3f4c15203fb20.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6f6e54376a66cbc78e16700d4c424fe1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/2f60753dfc875a6876adc35833a69d31.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/ae0116e589d8de712f8dafd0c356cefe.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/da910c98fcc8de1b4d2d1498cd7899fd.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/140349649d8b7d08c8e88bfbbaa2f900.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/a953bae2eeb7364ef3ef2976a97d07eb.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4da59828136c3b1308aad0aa990778a7.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4a365b61a80e47288c8609ccd5982396.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/cd0a8a96b783a51236812ce24c59a329.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/16008ac19768d05e7dee16406ff958a1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/ef1d17b69ebf9449a8bb52459b168c26.jpeg\" style=\"width:100%;\"/>",
    "FansCount": null,
    "ImageUrls": [
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/d209ef7bcc9183c3bb8ca1dfdb108d49.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/74257ab65f3f00da7a90fde9042fe640.jpeg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/e8fbd9cb-cc74-4caa-9380-84c46d27b008.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/d76f515b-e375-4060-b94e-cf64f6b0964e.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/f2f279b5-6000-4fbe-b99b-7c1cbd7884ea.jpg"
    ],
    "MainImageVideo": null,
    "OfferId": 1620002566,
    "OriginalPriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 115,
        "Range": "3"
      }
    ],
    "PriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 95.4,
        "Range": "3"
      }
    ],
    "ProductFeatureTuples": [
      {
        "Item1": "\u9762\u6599\u6750\u8d28",
        "Item2": "\u4eff\u76ae\u8349"
      },
      {
        "Item1": "\u6210\u5206\u542b\u91cf",
        "Item2": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09"
      },
      {
        "Item1": "\u7248\u578b",
        "Item2": "\u4fee\u8eab"
      },
      {
        "Item1": "\u9886\u578b",
        "Item2": "\u5706\u9886"
      },
      {
        "Item1": "\u8863\u957f",
        "Item2": "\u77ed\u6b3e"
      },
      {
        "Item1": "\u662f\u5426\u5e26\u6bdb\u9886",
        "Item2": "\u4e0d\u5e26\u6bdb\u9886"
      },
      {
        "Item1": "\u4e3b\u98ce\u683c",
        "Item2": "\u6c14\u8d28\u540d\u5a9b"
      }
    ],
    "ProductFeatures": {
      "\u4e3b\u98ce\u683c": "\u6c14\u8d28\u540d\u5a9b",
      "\u6210\u5206\u542b\u91cf": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09",
      "\u662f\u5426\u5e26\u6bdb\u9886": "\u4e0d\u5e26\u6bdb\u9886",
      "\u7248\u578b": "\u4fee\u8eab",
      "\u8863\u957f": "\u77ed\u6b3e",
      "\u9762\u6599\u6750\u8d28": "\u4eff\u76ae\u8349",
      "\u9886\u578b": "\u5706\u9886"
    },
    "RateCount": null,
    "RetryCount": 0,
    "SellCount": "\u5df2\u62fc4.2\u4e07\u4ef6",
    "SellerId": null,
    "SellerNick": null,
    "ShopId": "461742",
    "ShopInfo": null,
    "ShopName": "\u679c\u679c\u5bb6\u6c14\u8d28\u5973\u88c5",
    "ShopUrl": "http://yangkeduo.com/mall_page.html?mall_id=461742",
    "SkuMaps": [
      {
        "AmountOnSale": 73,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357891",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 65,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357892",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 82,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357893",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357894",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 94,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357895",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 105,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357896",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 1051,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357897",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 88,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357898",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 80,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357899",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 660,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357900",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 126,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357901",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357902",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 98,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
        "Key": "1215:105309781;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107855",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 95,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/3660b7893ca5cda1ffcea745d10b2506.jpeg",
        "Key": "1215:105309781;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107856",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/a4a5a671afbb2d8e1f4c21c0ced3bea8.jpeg",
        "Key": "1215:105309781;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107857",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/f0551176629bf81f25757c160198dba1.jpeg",
        "Key": "1215:105309781;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107858",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 99,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/801a2e23140bfe76229f02aab0a8a5fe.jpeg",
        "Key": "1215:105309781;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107853",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 100,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/2f202934f16f0eee41257b77bf489262.jpeg",
        "Key": "1215:105309781;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107854",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      }
    ],
    "SkuProps": [
      {
        "IsImg": true,
        "Prop": "\u989c\u8272",
        "Value": [
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
            "name": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)",
            "value": "1215:1115500378"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
            "name": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:1115501666"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
            "name": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:105309781"
          }
        ]
      },
      {
        "IsImg": false,
        "Prop": "\u5c3a\u7801",
        "Value": [
          {
            "name": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
            "value": "1226:119128"
          },
          {
            "name": "M\uff0890-100\u65a4\uff09",
            "value": "1226:96784"
          },
          {
            "name": "L\uff08100-110\u65a4\uff09",
            "value": "1226:33651"
          },
          {
            "name": "XL\uff08110-120\u65a4\uff09",
            "value": "1226:33652"
          },
          {
            "name": "2XL\uff08120-130\u65a4\uff09",
            "value": "1226:33653"
          },
          {
            "name": "3XL\uff08130-140\u65a4\uff09",
            "value": "1226:33656"
          }
        ]
      }
    ],
    "SourceType": 6,
    "Subject": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
    "Tag": null,
    "Unit": null,
    "UserId": "461742",
    "_ddf": "app",
    "format_check": "ok"
  },
  "reason": "",
  "request_id": "gw-4.63510267214bd",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-17 11:40:13",
  "secache_time": 1666253415,
  "server_memory": "0.84MB",
  "server_time": "Beijing/2023-10-20 16:10:15",
  "translate_engine": "baidu",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:40:13,369 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:40:13,369 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:40:13,370 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,370 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,371 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,374 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:40:13,374 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:40:13,374 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,374 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：详情页面选择规格，提交订单
INFO - 2025-07-17 11:40:13,374 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,374 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,374 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': 127839112, 'price': '128', 'freight_insurance': '0.00', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:40:13,376 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:40:13",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "951114824557669669303",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:40:13,376 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'orderNumber': '951114824557669669303'}
INFO - 2025-07-17 11:40:13,376 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'userId': '1262204802105607729'}
INFO - 2025-07-17 11:40:13,376 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}]
INFO - 2025-07-17 11:40:13,376 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:40:13,377 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,377 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,378 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,384 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:40:13,384 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:40:13,384 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,384 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:40:13,384 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,384 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,384 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '951114824557669669303', 'userId': '1262204802105607729', 'timeStamp': '1752723613'}}
INFO - 2025-07-17 11:40:13,386 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:40:13",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:40:13,386 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '订单支付成功'}}]
INFO - 2025-07-17 11:40:13,386 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '订单支付成功'}，等于预期结果：{'message': '订单支付成功'}
INFO - 2025-07-17 11:40:13,386 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,387 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,388 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,392 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：校验订单状态
INFO - 2025-07-17 11:40:13,392 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/checkOrderStatus
INFO - 2025-07-17 11:40:13,392 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,392 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：校验商品订单状态
INFO - 2025-07-17 11:40:13,392 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,392 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,392 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '951114824557669669303', 'timeStamp': '1752723613'}}
INFO - 2025-07-17 11:40:13,394 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "",
  "error_code": "",
  "queryTime": "2025-07-17 11:40:13",
  "status": "0",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:40:13,394 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'status': '0'}}]
INFO - 2025-07-17 11:40:13,394 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'status': '0'}，等于预期结果：{'status': '0'}
INFO - 2025-07-17 11:40:13,394 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,395 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,396 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
ERROR - 2025-07-17 11:40:13,399 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
ERROR - 2025-07-17 11:40:13,400 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
INFO - 2025-07-17 11:40:13,400 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:40:13,400 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:40:13,400 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:40:13,400 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:40:13,400 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'None'}
INFO - 2025-07-17 11:40:13,400 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,401 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:40:13,402 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:40:13,403 - apiutil.py:183 -[apiutil:extract_data_list] - json提取到参数：{'goodsId': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:40:13,403 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:40:13,403 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:40:13,403 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,404 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,405 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,410 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:40:13,410 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:40:13,410 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,410 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:40:13,410 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,410 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,410 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819,33809635011,56996760797,82193785267,74190550836', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:40:13,412 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "\u4e0d\u5b58\u5728\u8be5\u5546\u54c1",
  "error_code": "4000",
  "goodsId": "",
  "item": {},
  "secache_date": "2025-07-17 11:40:13",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:40:13,412 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '4000'}}]
INFO - 2025-07-17 11:40:13,412 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【4000】,实际结果【4000】
INFO - 2025-07-17 11:40:13,412 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,413 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,414 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,438 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：添加购物车
INFO - 2025-07-17 11:40:13,438 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/shoppingJoinCart
INFO - 2025-07-17 11:40:13,438 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,438 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：添加购物车
INFO - 2025-07-17 11:40:13,438 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,438 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,439 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '82193785267', 'count': 2, 'price': 128, 'timeStamp': '1752723613'}}
INFO - 2025-07-17 11:40:13,440 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "cartList": [
    {
      "cid": 933,
      "price": "99.00",
      "productId": "18382788819",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "productName": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "totalPrice": "239.00"
    },
    {
      "cid": 574,
      "price": "108.00",
      "productId": "33809635011",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "productName": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "totalPrice": "347.00"
    },
    {
      "cid": 744,
      "price": "17.80",
      "productId": "56996760797",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "productName": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "totalPrice": "364.80"
    }
  ],
  "createTime": "2025-07-17 11:40:13",
  "error": "",
  "error_code": "0000",
  "message": "success",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:40:13,441 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:40:13,441 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:40:13,441 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,442 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,443 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,446 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:40:13,446 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:40:13,446 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,446 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：提交订单
INFO - 2025-07-17 11:40:13,446 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,446 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,446 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '56996760797', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': '127839112', 'price': '128', 'freight_insurance': '0.0', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:40:13,448 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:40:13",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "886111563791951809887",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:40:13,448 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:40:13,448 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:40:13,448 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}, {'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:40:13,448 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:40:13,448 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:40:13,449 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,449 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,450 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,458 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:40:13,458 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:40:13,458 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:40:13,458 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:40:13,458 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,458 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,458 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '886111563791951809887', 'userId': '1262204802105607729', 'timeStamp': '1752723613'}}
INFO - 2025-07-17 11:40:13,460 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:40:13",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:40:13,460 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '订单支付成功'}}, {'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:40:13,460 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【订单支付成功】,实际结果【订单支付成功】
INFO - 2025-07-17 11:40:13,460 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:40:13,460 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,461 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,462 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,467 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:40:13,467 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:40:13,467 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,467 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常新增用户
INFO - 2025-07-17 11:40:13,467 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,467 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,467 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': '27eE93ba7aAcAa91248D5402Acb03'}}
INFO - 2025-07-17 11:40:13,469 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u65b0\u589e\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:40:13,470 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增成功'}}]
INFO - 2025-07-17 11:40:13,470 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增成功】,实际结果【新增成功】
INFO - 2025-07-17 11:40:13,470 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,470 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,471 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,473 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:40:13,473 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:40:13,473 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,473 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少token
INFO - 2025-07-17 11:40:13,473 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,473 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,473 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:40:13,476 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:40:13,477 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:40:13,477 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:40:13,477 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,477 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,479 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,481 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:40:13,481 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:40:13,481 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,481 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数username
INFO - 2025-07-17 11:40:13,481 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,481 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,481 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:40:13,488 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:40:13,489 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:40:13,489 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:40:13,489 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,491 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,493 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,496 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:40:13,496 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:40:13,496 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,496 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数role_id
INFO - 2025-07-17 11:40:13,496 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,496 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,496 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:40:13,500 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:40:13,501 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:40:13,501 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:40:13,501 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,502 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,504 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,507 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：修改用户
INFO - 2025-07-17 11:40:13,507 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/updateUser
INFO - 2025-07-17 11:40:13,507 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,507 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常修改用户信息
INFO - 2025-07-17 11:40:13,508 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,508 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,508 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789#$123', 'role_id': 89588181111112343, 'dates': '2023-12-31', 'phone': 13800000000}}
INFO - 2025-07-17 11:40:13,510 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u66f4\u65b0\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:40:13,511 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '更新成功'}}]
INFO - 2025-07-17 11:40:13,511 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【更新成功】,实际结果【更新成功】
INFO - 2025-07-17 11:40:13,511 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,512 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,513 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,515 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:40:13,515 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:40:13,515 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,515 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效删除用户
INFO - 2025-07-17 11:40:13,515 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,515 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,515 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:40:13,517 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u5220\u9664\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:40:13,518 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除成功'}}]
INFO - 2025-07-17 11:40:13,518 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除成功】,实际结果【删除成功!】
INFO - 2025-07-17 11:40:13,518 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,518 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,519 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,522 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:40:13,522 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:40:13,522 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,523 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid不存在
INFO - 2025-07-17 11:40:13,523 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,523 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,523 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:40:13,525 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:40:13,525 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:40:13,525 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:40:13,526 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,526 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,527 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,529 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:40:13,529 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:40:13,529 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,529 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid为空
INFO - 2025-07-17 11:40:13,530 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,530 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,530 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:40:13,532 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:40:13,533 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:40:13,533 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:40:13,533 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,534 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,535 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,536 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:40:13,537 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:40:13,537 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,537 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·缺少必填参数
INFO - 2025-07-17 11:40:13,537 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,537 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,539 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:40:13,539 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:40:13,539 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:40:13,539 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,540 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:40:13,541 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:40:13,543 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户查询
INFO - 2025-07-17 11:40:13,543 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/queryUser
INFO - 2025-07-17 11:40:13,543 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:40:13,543 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效查询用户
INFO - 2025-07-17 11:40:13,543 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:40:13,543 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:40:13,544 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:40:13,546 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u67e5\u8be2\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:40:13,546 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '查询成功'}}, {'eq': {'msg_code': 200}}]
INFO - 2025-07-17 11:40:13,546 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【查询成功】,实际结果【查询成功!】
INFO - 2025-07-17 11:40:13,546 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg_code': 200}，等于预期结果：{'msg_code': 200}
INFO - 2025-07-17 11:40:13,547 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:40:13,547 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,211 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-07-17 11:42:22,211 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/login
INFO - 2025-07-17 11:42:22,212 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,212 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：用户名和密码正确登录验证
INFO - 2025-07-17 11:42:22,212 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,212 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,212 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_name': 'test01', 'passwd': 'admin123'}}
INFO - 2025-07-17 11:42:22,222 - sendrequest.py:108 -[sendrequest:send_request] - cookie：{'Cookie': {'access_token_cookie': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MjcyMzc0MiwianRpIjoiZjI3YzBlYWMtMmNjNC00NTFiLWI3YmYtMWVlMjU0YzFiNDBmIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImV4YW1wbGVfdXNlciIsIm5iZiI6MTc1MjcyMzc0MiwiY3NyZiI6ImU0MjZiNTg4LWEyZjktNGUwYy05N2RlLTc1YjFhODBmNGMxYSIsImV4cCI6MTc1MjcyNDY0Mn0.ccJuAz5O5QegOxy0mDO8cAQ_MOmY7csoNPoVEYMPj44', 'csrf_access_token': 'e426b588-a2f9-4e0c-97de-75b1a80f4c1a'}}
INFO - 2025-07-17 11:42:22,222 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u767b\u5f55\u6210\u529f",
  "msg_code": 200,
  "orgId": "4140913758110176843",
  "token": "f09CD9cABf9746Eb90Cb14aebc36b",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:42:22,223 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:42:22,223 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': 'none'}}, {'eq': {'msg': '登录成功'}}]
INFO - 2025-07-17 11:42:22,223 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【None】,实际结果【[None]】
INFO - 2025-07-17 11:42:22,223 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg': '登录成功'}，等于预期结果：{'msg': '登录成功'}
INFO - 2025-07-17 11:42:22,223 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,223 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,227 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:42:22,227 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:42:22,227 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:42:22,227 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:42:22,227 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'f09CD9cABf9746Eb90Cb14aebc36b'}
INFO - 2025-07-17 11:42:22,227 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,228 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:42:22,229 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:42:22,230 - apiutil_business.py:205 -[apiutil_business:extract_data_list] - json提取到参数：{'goodsIds': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:42:22,230 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:42:22,230 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:42:22,230 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,235 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,236 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,238 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:42:22,239 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:42:22,239 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,239 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:42:22,239 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,239 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,239 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:42:22,241 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "api_type": "pinduoduo",
  "cache": 0,
  "call_args": {
    "num_iid": "1620002566"
  },
  "client_ip": "106.6.39.223",
  "error": "",
  "error_code": "0000",
  "execution_time": "0.437",
  "goodsId": "18382788819",
  "item": {
    "AmountOnSale": 3188,
    "CategoryId": 8484,
    "Coupon": null,
    "Delivery": {
      "From": null,
      "Info": null,
      "MarkInfo": null,
      "Postage": "\u5feb\u9012 \u514d\u8fd0\u8d39",
      "To": null,
      "extras": null
    },
    "DescUrl": null,
    "Detail": "<img src=\"https://img.pddpic.com/mms-material-img/2022-09-18/3f89d470-1af8-4dee-b529-6d62aa2ea3b7.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-02-15/ddf6fe7b-b536-4183-932d-69a1189a3f59.png\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/20f659b04d3e7e5851c27ff9931c96fc.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2019-11-14/4420a8c3-49ed-46d8-ab55-15e7a638ca31.jpg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/26c3e9d5cfbaf4e8f13b2bdd38f48d71.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/0aa872fa74599dad7b6aefe6b6c035c0.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6bc959e32a30424c7a5284a37676999c.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/1fa9861a8c99c5e9e8119fd2239fef5a.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/b62cabf1d2320c5761e3f4c15203fb20.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/6f6e54376a66cbc78e16700d4c424fe1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/2f60753dfc875a6876adc35833a69d31.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/ae0116e589d8de712f8dafd0c356cefe.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/da910c98fcc8de1b4d2d1498cd7899fd.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/140349649d8b7d08c8e88bfbbaa2f900.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/a953bae2eeb7364ef3ef2976a97d07eb.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4da59828136c3b1308aad0aa990778a7.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-09-02/4a365b61a80e47288c8609ccd5982396.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/cd0a8a96b783a51236812ce24c59a329.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/16008ac19768d05e7dee16406ff958a1.jpeg\" style=\"width:100%;\"/><img src=\"https://t00img.yangkeduo.com/goods/images/2018-11-17/ef1d17b69ebf9449a8bb52459b168c26.jpeg\" style=\"width:100%;\"/>",
    "FansCount": null,
    "ImageUrls": [
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/d209ef7bcc9183c3bb8ca1dfdb108d49.jpeg",
      "https://omsproductionimg.yangkeduo.com/images/2017-12-12/74257ab65f3f00da7a90fde9042fe640.jpeg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/e8fbd9cb-cc74-4caa-9380-84c46d27b008.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/d76f515b-e375-4060-b94e-cf64f6b0964e.jpg",
      "https://t00img.yangkeduo.com/goods/images/2019-08-17/f2f279b5-6000-4fbe-b99b-7c1cbd7884ea.jpg"
    ],
    "MainImageVideo": null,
    "OfferId": 1620002566,
    "OriginalPriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 115,
        "Range": "3"
      }
    ],
    "PriceRangeInfos": [
      {
        "ConvertPrice": 0,
        "Price": 95.4,
        "Range": "3"
      }
    ],
    "ProductFeatureTuples": [
      {
        "Item1": "\u9762\u6599\u6750\u8d28",
        "Item2": "\u4eff\u76ae\u8349"
      },
      {
        "Item1": "\u6210\u5206\u542b\u91cf",
        "Item2": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09"
      },
      {
        "Item1": "\u7248\u578b",
        "Item2": "\u4fee\u8eab"
      },
      {
        "Item1": "\u9886\u578b",
        "Item2": "\u5706\u9886"
      },
      {
        "Item1": "\u8863\u957f",
        "Item2": "\u77ed\u6b3e"
      },
      {
        "Item1": "\u662f\u5426\u5e26\u6bdb\u9886",
        "Item2": "\u4e0d\u5e26\u6bdb\u9886"
      },
      {
        "Item1": "\u4e3b\u98ce\u683c",
        "Item2": "\u6c14\u8d28\u540d\u5a9b"
      }
    ],
    "ProductFeatures": {
      "\u4e3b\u98ce\u683c": "\u6c14\u8d28\u540d\u5a9b",
      "\u6210\u5206\u542b\u91cf": "71%\uff08\u542b\uff09\u201480%\uff08\u542b\uff09",
      "\u662f\u5426\u5e26\u6bdb\u9886": "\u4e0d\u5e26\u6bdb\u9886",
      "\u7248\u578b": "\u4fee\u8eab",
      "\u8863\u957f": "\u77ed\u6b3e",
      "\u9762\u6599\u6750\u8d28": "\u4eff\u76ae\u8349",
      "\u9886\u578b": "\u5706\u9886"
    },
    "RateCount": null,
    "RetryCount": 0,
    "SellCount": "\u5df2\u62fc4.2\u4e07\u4ef6",
    "SellerId": null,
    "SellerNick": null,
    "ShopId": "461742",
    "ShopInfo": null,
    "ShopName": "\u679c\u679c\u5bb6\u6c14\u8d28\u5973\u88c5",
    "ShopUrl": "http://yangkeduo.com/mall_page.html?mall_id=461742",
    "SkuMaps": [
      {
        "AmountOnSale": 73,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357891",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 65,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357892",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 82,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357893",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357894",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 94,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357895",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 105,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
        "Key": "1215:1115500378;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357896",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)"
        }
      },
      {
        "AmountOnSale": 1051,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357897",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 88,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357898",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 80,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357899",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 660,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357900",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 126,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357901",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 89,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
        "Key": "1215:1115501666;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "57114357902",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 98,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
        "Key": "1215:105309781;1226:119128",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107855",
        "SpecAttributes": {
          "\u5c3a\u7801": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 95,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/3660b7893ca5cda1ffcea745d10b2506.jpeg",
        "Key": "1215:105309781;1226:96784",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107856",
        "SpecAttributes": {
          "\u5c3a\u7801": "M\uff0890-100\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/a4a5a671afbb2d8e1f4c21c0ced3bea8.jpeg",
        "Key": "1215:105309781;1226:33651",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107857",
        "SpecAttributes": {
          "\u5c3a\u7801": "L\uff08100-110\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 97,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/f0551176629bf81f25757c160198dba1.jpeg",
        "Key": "1215:105309781;1226:33652",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107858",
        "SpecAttributes": {
          "\u5c3a\u7801": "XL\uff08110-120\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 99,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/801a2e23140bfe76229f02aab0a8a5fe.jpeg",
        "Key": "1215:105309781;1226:33653",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107853",
        "SpecAttributes": {
          "\u5c3a\u7801": "2XL\uff08120-130\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      },
      {
        "AmountOnSale": 100,
        "ImageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/2f202934f16f0eee41257b77bf489262.jpeg",
        "Key": "1215:105309781;1226:33656",
        "OriginalPrice": 115,
        "Price": 95.4,
        "SkuId": "103851107854",
        "SpecAttributes": {
          "\u5c3a\u7801": "3XL\uff08130-140\u65a4\uff09",
          "\u989c\u8272": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09"
        }
      }
    ],
    "SkuProps": [
      {
        "IsImg": true,
        "Prop": "\u989c\u8272",
        "Value": [
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/062d42b525a7c786920cbb83ac772af7.jpeg",
            "name": "\u7c89\u8272\u4e24\u4ef6\u5957(\u5916\u5957+\u88d9\u5b50)",
            "value": "1215:1115500378"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-08-28/415bed99d5a925123d7b7c39547205de.jpeg",
            "name": "\u7c73\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:1115501666"
          },
          {
            "imageUrl": "http://t00img.yangkeduo.com/goods/images/2018-11-17/48b30664f0f7e526ab1b956e813f25cf.jpeg",
            "name": "\u84dd\u8272\u4e24\u4ef6\u5957\uff08\u5916\u5957+\u88d9\u5b50\uff09",
            "value": "1215:105309781"
          }
        ]
      },
      {
        "IsImg": false,
        "Prop": "\u5c3a\u7801",
        "Value": [
          {
            "name": "S\uff0890\u65a4\u4ee5\u4e0b\uff09",
            "value": "1226:119128"
          },
          {
            "name": "M\uff0890-100\u65a4\uff09",
            "value": "1226:96784"
          },
          {
            "name": "L\uff08100-110\u65a4\uff09",
            "value": "1226:33651"
          },
          {
            "name": "XL\uff08110-120\u65a4\uff09",
            "value": "1226:33652"
          },
          {
            "name": "2XL\uff08120-130\u65a4\uff09",
            "value": "1226:33653"
          },
          {
            "name": "3XL\uff08130-140\u65a4\uff09",
            "value": "1226:33656"
          }
        ]
      }
    ],
    "SourceType": 6,
    "Subject": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
    "Tag": null,
    "Unit": null,
    "UserId": "461742",
    "_ddf": "app",
    "format_check": "ok"
  },
  "reason": "",
  "request_id": "gw-4.63510267214bd",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-17 11:42:22",
  "secache_time": 1666253415,
  "server_memory": "0.84MB",
  "server_time": "Beijing/2023-10-20 16:10:15",
  "translate_engine": "baidu",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:42:22,242 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:42:22,242 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:42:22,242 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,243 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,244 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,247 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:42:22,247 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:42:22,247 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,247 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：详情页面选择规格，提交订单
INFO - 2025-07-17 11:42:22,247 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,247 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,247 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': 127839112, 'price': '128', 'freight_insurance': '0.00', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:42:22,249 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:42:22",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "148024548422480032017",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:42:22,251 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'orderNumber': '148024548422480032017'}
INFO - 2025-07-17 11:42:22,251 - apiutil_business.py:178 -[apiutil_business:extract_data] - json提取到参数：{'userId': '1262204802105607729'}
INFO - 2025-07-17 11:42:22,251 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}]
INFO - 2025-07-17 11:42:22,251 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:42:22,251 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,252 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,253 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,259 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:42:22,259 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:42:22,259 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,259 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:42:22,259 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,259 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,260 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '148024548422480032017', 'userId': '1262204802105607729', 'timeStamp': '1752723742'}}
INFO - 2025-07-17 11:42:22,262 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:42:22",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:42:22,262 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '订单支付成功'}}]
INFO - 2025-07-17 11:42:22,262 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '订单支付成功'}，等于预期结果：{'message': '订单支付成功'}
INFO - 2025-07-17 11:42:22,262 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,263 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,264 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,268 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：校验订单状态
INFO - 2025-07-17 11:42:22,268 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/checkOrderStatus
INFO - 2025-07-17 11:42:22,268 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,268 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：校验商品订单状态
INFO - 2025-07-17 11:42:22,268 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,268 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,268 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '148024548422480032017', 'timeStamp': '1752723742'}}
INFO - 2025-07-17 11:42:22,271 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "",
  "error_code": "",
  "queryTime": "2025-07-17 11:42:22",
  "status": "0",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:42:22,271 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'status': '0'}}]
INFO - 2025-07-17 11:42:22,271 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'status': '0'}，等于预期结果：{'status': '0'}
INFO - 2025-07-17 11:42:22,271 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,272 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,273 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
ERROR - 2025-07-17 11:42:22,275 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
ERROR - 2025-07-17 11:42:22,276 - readyaml.py:113 -[readyaml:get_extract_yaml] - 【extract.yaml】没有找到：cookie,--'cookie'
INFO - 2025-07-17 11:42:22,277 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品列表
INFO - 2025-07-17 11:42:22,277 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/goodsList
INFO - 2025-07-17 11:42:22,277 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：Get
INFO - 2025-07-17 11:42:22,277 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品列表
INFO - 2025-07-17 11:42:22,277 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'None'}
INFO - 2025-07-17 11:42:22,277 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,277 - sendrequest.py:151 -[sendrequest:run_main] - 请求参数：{'params': {'msgType': 'getHandsetListOfCust', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:42:22,279 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "api_info": "today:21 max:10000 all[90=21+33+36];expires:2030-12-31",
  "cache": 0,
  "error_code": "0000",
  "goodsList": [
    {
      "goodsId": "18382788819",
      "goods_count": "233",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "goods_name": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "original_price": "",
      "unit_price": "\uffe599.00"
    },
    {
      "goodsId": "33809635011",
      "goods_count": "521",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/176019babfdecffa1d9f98f40b7e99b4.jpeg",
      "goods_name": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "original_price": "",
      "unit_price": "\uffe5108.00"
    },
    {
      "goodsId": "56996760797",
      "goods_count": "1181",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "original_price": "",
      "unit_price": "\uffe517.80"
    },
    {
      "goodsId": "82193785267",
      "goods_count": "3000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u81ea\u8425\u3011ISB\u4f0a\u73ca\u5a1c\u610f\u5927\u5229\u6c34\u679c\u7cfb\u5217\u5ba0\u7269\u72ac\u732b\u6c90\u6d74\u9732\u9664\u81ed\u9999\u6ce2\u62a4\u6bdb\u7d20",
      "original_price": "",
      "unit_price": "\uffe5650.00"
    },
    {
      "goodsId": "74190550836",
      "goods_count": "1000+",
      "goods_image": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "goods_name": "\u3010\u65b0\u54c1\u96f60CM\u5d4c\u5165\u5f0f\u3011\u6d77\u5c14\u7535\u51b0\u7bb1410L\u5bb6\u7528\u6cd5\u5f0f\u56db\u95e8\u591a\u95e8\u5b98\u65b9\u6b63\u54c1",
      "original_price": "",
      "unit_price": "\uffe55746.00"
    }
  ],
  "reason": "",
  "request_id": "request_id",
  "secache": "c98b29872e8a4b28859db207944ba817",
  "secache_date": "2025-07-15 16:34:32",
  "secache_time": 1752568472000,
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:42:22,279 - apiutil.py:183 -[apiutil:extract_data_list] - json提取到参数：{'goodsId': ['18382788819', '33809635011', '56996760797', '82193785267', '74190550836']}
INFO - 2025-07-17 11:42:22,279 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:42:22,280 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:42:22,280 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,280 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,281 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,286 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：商品详情
INFO - 2025-07-17 11:42:22,286 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/productDetail
INFO - 2025-07-17 11:42:22,286 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,286 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：获取商品详情
INFO - 2025-07-17 11:42:22,286 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,286 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,286 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'pro_id': '18382788819,33809635011,56996760797,82193785267,74190550836', 'page': 1, 'size': 20}}
INFO - 2025-07-17 11:42:22,288 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error": "\u4e0d\u5b58\u5728\u8be5\u5546\u54c1",
  "error_code": "4000",
  "goodsId": "",
  "item": {},
  "secache_date": "2025-07-17 11:42:22",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:42:22,288 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '4000'}}]
INFO - 2025-07-17 11:42:22,288 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【4000】,实际结果【4000】
INFO - 2025-07-17 11:42:22,288 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,289 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,290 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,315 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：添加购物车
INFO - 2025-07-17 11:42:22,315 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/shoppingJoinCart
INFO - 2025-07-17 11:42:22,315 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,315 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：添加购物车
INFO - 2025-07-17 11:42:22,315 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,315 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,315 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'count': 2, 'price': 128, 'timeStamp': '1752723742'}}
INFO - 2025-07-17 11:42:22,317 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "cartList": [
    {
      "cid": 629,
      "price": "99.00",
      "productId": "18382788819",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "productName": "\u30102\u4ef6\u5957\u3011\u5957\u88c5\u79cb\u51ac\u65b0\u6b3e\u4eff\u736d\u5154\u6bdb\u9489\u73e0\u76ae\u8349\u6bdb\u6bdb\u77ed\u5916\u5957\u52a0\u539a\u5927\u8863\u5973\u88c5",
      "totalPrice": "239.00"
    },
    {
      "cid": 255,
      "price": "108.00",
      "productId": "33809635011",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/bcf848aa71c6389607ae7a84b70f1543.jpeg",
      "productName": "\u597d\u5947\u5c0f\u68ee\u6797\u5fc3\u94bb\u88c5\u7eb8\u5c3f\u88e4M22\u62c9\u62c9\u88e4L18/XL14\u8d85\u8584\u900f\u6c14\u88e4\u578b\u5c3f\u4e0d\u6e7f 1\u4ef6\u88c5",
      "totalPrice": "347.00"
    },
    {
      "cid": 854,
      "price": "17.80",
      "productId": "56996760797",
      "productImage": "https://omsproductionimg.yangkeduo.com/images/2017-12-12/efb5db42397550bffd3211ca6f197498.jpeg",
      "productName": "\u51bb\u5e72\u9e21\u5c0f\u80f8\u6574\u5757\u589e\u80a5\u8425\u517b\u53d1\u816e\u72d7\u72d7\u96f6\u98df\u65b0\u624b\u517b\u732b\u96f6\u98df\u5e7c\u732b\u96f6\u98df100g",
      "totalPrice": "364.80"
    }
  ],
  "createTime": "2025-07-17 11:42:22",
  "error": "",
  "error_code": "0000",
  "message": "success",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:42:22,317 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:42:22,317 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:42:22,317 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,318 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,319 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,322 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：提交订单
INFO - 2025-07-17 11:42:22,322 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/placeAnOrder
INFO - 2025-07-17 11:42:22,322 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,322 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：提交订单
INFO - 2025-07-17 11:42:22,322 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,322 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,322 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'goods_id': '18382788819', 'number': 2, 'propertyChildIds': '2:9', 'inviter_id': '127839112', 'price': '128', 'freight_insurance': '0.0', 'discount_code': '002399', 'consignee_info': {'name': '张三', 'phone': 13800000000, 'address': '北京市海淀区西三环北路74号院4栋3单元1008'}}}
INFO - 2025-07-17 11:42:22,324 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "crateTime": "2025-07-17 11:42:22",
  "error": "",
  "error_code": "0000",
  "message": "\u63d0\u4ea4\u8ba2\u5355\u6210\u529f",
  "orderNumber": "904823824016002746245",
  "translate_language": "zh-CN",
  "userId": "1262204802105607729"
}

INFO - 2025-07-17 11:42:22,324 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:42:22,325 - apiutil.py:154 -[apiutil:extract_data] - 提取接口的返回值：
INFO - 2025-07-17 11:42:22,325 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'eq': {'message': '提交订单成功'}}, {'eq': {'error_code': '0000'}}]
INFO - 2025-07-17 11:42:22,325 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'message': '提交订单成功'}，等于预期结果：{'message': '提交订单成功'}
INFO - 2025-07-17 11:42:22,325 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'error_code': '0000'}，等于预期结果：{'error_code': '0000'}
INFO - 2025-07-17 11:42:22,325 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,326 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,327 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,334 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：订单支付
INFO - 2025-07-17 11:42:22,334 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/coupApply/cms/orderPay
INFO - 2025-07-17 11:42:22,334 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-07-17 11:42:22,334 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：订单支付
INFO - 2025-07-17 11:42:22,334 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,334 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,334 - sendrequest.py:148 -[sendrequest:run_main] - 请求参数：{'json': {'orderNumber': '904823824016002746245', 'userId': '1262204802105607729', 'timeStamp': '1752723742'}}
INFO - 2025-07-17 11:42:22,336 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "createTime": "2025-07-17 11:42:22",
  "error": "",
  "error_code": "0000",
  "message": "\u8ba2\u5355\u652f\u4ed8\u6210\u529f",
  "translate_language": "zh-CN"
}

INFO - 2025-07-17 11:42:22,336 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '订单支付成功'}}, {'contains': {'error_code': '0000'}}]
INFO - 2025-07-17 11:42:22,336 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【订单支付成功】,实际结果【订单支付成功】
INFO - 2025-07-17 11:42:22,336 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【0000】,实际结果【0000】
INFO - 2025-07-17 11:42:22,336 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,337 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,338 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,342 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:42:22,342 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:42:22,342 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,343 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常新增用户
INFO - 2025-07-17 11:42:22,343 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,343 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,343 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': 'f09CD9cABf9746Eb90Cb14aebc36b'}}
INFO - 2025-07-17 11:42:22,344 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u65b0\u589e\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:42:22,345 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增成功'}}]
INFO - 2025-07-17 11:42:22,345 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增成功】,实际结果【新增成功】
INFO - 2025-07-17 11:42:22,345 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,345 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,346 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,348 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:42:22,348 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:42:22,348 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,348 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少token
INFO - 2025-07-17 11:42:22,348 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,348 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,348 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:42:22,350 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:42:22,351 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:42:22,351 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:42:22,351 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,351 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,352 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,354 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:42:22,354 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:42:22,354 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,354 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数username
INFO - 2025-07-17 11:42:22,354 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,354 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,354 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'password': 'tset6789890', 'role_id': 123456789, 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:42:22,356 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:42:22,357 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:42:22,357 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:42:22,357 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,357 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,358 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,360 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：新增用户
INFO - 2025-07-17 11:42:22,360 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/addUser
INFO - 2025-07-17 11:42:22,360 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,360 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效新增·缺少必填参数role_id
INFO - 2025-07-17 11:42:22,360 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,360 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,360 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789890', 'dates': '2023-12-31', 'phone': 13800000000, 'token': None}}
INFO - 2025-07-17 11:42:22,362 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u65b0\u589e\u5931\u8d25",
  "msg_code": 9001
}

INFO - 2025-07-17 11:42:22,363 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '新增失败'}}]
INFO - 2025-07-17 11:42:22,363 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【新增失败】,实际结果【新增失败】
INFO - 2025-07-17 11:42:22,363 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,364 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,365 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,366 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：修改用户
INFO - 2025-07-17 11:42:22,366 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/updateUser
INFO - 2025-07-17 11:42:22,366 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,366 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：正常修改用户信息
INFO - 2025-07-17 11:42:22,366 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,366 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,366 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'username': 'testadduser', 'password': 'tset6789#$123', 'role_id': 89588181111112343, 'dates': '2023-12-31', 'phone': 13800000000}}
INFO - 2025-07-17 11:42:22,368 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u66f4\u65b0\u6210\u529f",
  "msg_code": 200
}

INFO - 2025-07-17 11:42:22,369 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'status_code': 200}}, {'contains': {'msg': '更新成功'}}]
INFO - 2025-07-17 11:42:22,369 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【更新成功】,实际结果【更新成功】
INFO - 2025-07-17 11:42:22,369 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,370 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,371 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,373 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:42:22,373 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:42:22,373 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,373 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效删除用户
INFO - 2025-07-17 11:42:22,373 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,373 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,373 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:42:22,375 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u5220\u9664\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:42:22,375 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除成功'}}]
INFO - 2025-07-17 11:42:22,375 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除成功】,实际结果【删除成功!】
INFO - 2025-07-17 11:42:22,375 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,376 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,377 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,379 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:42:22,379 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:42:22,379 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,379 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid不存在
INFO - 2025-07-17 11:42:22,379 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,379 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,379 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:42:22,381 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:42:22,382 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:42:22,382 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:42:22,382 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,382 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,384 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,385 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:42:22,385 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:42:22,385 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,385 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·userid为空
INFO - 2025-07-17 11:42:22,386 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,386 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,386 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 1238393873922}}
INFO - 2025-07-17 11:42:22,388 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:42:22,389 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:42:22,389 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:42:22,389 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,390 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,391 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,392 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：删除用户
INFO - 2025-07-17 11:42:22,392 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/deleteUser
INFO - 2025-07-17 11:42:22,392 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,393 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：无效删除用户·缺少必填参数
INFO - 2025-07-17 11:42:22,393 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,393 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,395 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "msg": "\u5220\u9664\u5931\u8d25\uff0c\u7528\u6237id\u4e0d\u5b58\u5728!",
  "msg_code": 9001
}

INFO - 2025-07-17 11:42:22,395 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '删除失败'}}]
INFO - 2025-07-17 11:42:22,395 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【删除失败】,实际结果【删除失败，用户id不存在!】
INFO - 2025-07-17 11:42:22,395 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,396 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-07-17 11:42:22,397 - conftest.py:20 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-07-17 11:42:22,399 - sendrequest.py:136 -[sendrequest:run_main] - 接口名称：用户查询
INFO - 2025-07-17 11:42:22,399 - sendrequest.py:137 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/dar/user/queryUser
INFO - 2025-07-17 11:42:22,399 - sendrequest.py:138 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-07-17 11:42:22,399 - sendrequest.py:139 -[sendrequest:run_main] - 测试用例名称：有效查询用户
INFO - 2025-07-17 11:42:22,399 - sendrequest.py:140 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}
INFO - 2025-07-17 11:42:22,399 - sendrequest.py:141 -[sendrequest:run_main] - Cookie：None
INFO - 2025-07-17 11:42:22,399 - sendrequest.py:145 -[sendrequest:run_main] - 请求参数：{'data': {'user_id': 123839387391912}}
INFO - 2025-07-17 11:42:22,401 - sendrequest.py:109 -[sendrequest:send_request] - 接口返回信息：{
  "error_code": null,
  "msg": "\u67e5\u8be2\u6210\u529f!",
  "msg_code": 200
}

INFO - 2025-07-17 11:42:22,401 - assertions.py:171 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'msg': '查询成功'}}, {'eq': {'msg_code': 200}}]
INFO - 2025-07-17 11:42:22,402 - assertions.py:45 -[assertions:contains_assert] - 字符串包含断言成功：预期结果【查询成功】,实际结果【查询成功!】
INFO - 2025-07-17 11:42:22,402 - assertions.py:68 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'msg_code': 200}，等于预期结果：{'msg_code': 200}
INFO - 2025-07-17 11:42:22,402 - assertions.py:199 -[assertions:assert_result] - 测试成功
INFO - 2025-07-17 11:42:22,402 - conftest.py:22 -[conftest:start_test_and_end] - -------------接口测试结束--------------
